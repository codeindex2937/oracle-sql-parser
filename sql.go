// Code generated by goyacc - DO NOT EDIT.


package parser

import __yyfmt__ "fmt"


import (
	"strings"

	"github.com/sjjian/oracle-sql-parser/ast"
	"github.com/sjjian/oracle-sql-parser/ast/element"
)

func nextQuery(yylex interface{}) string {
	lex := yylex.(*yyLexImpl)
	tc := lex.scanner.TC
	query := string(lex.scanner.Text[lex.lastPos:tc])
	lex.lastPos = tc
	return strings.TrimSpace(query)
}


type yySymType struct {
	yys    int
    nothing     struct{}
    i           int
    b           bool
    str         string
    node        ast.Node
    anything    interface{}
}

type yyXError struct {
	state, xsym int
}

const (
	yyDefault                 = 57579
	yyEofCode                 = 57344
	_E                        = 57449
	_G                        = 57463
	_K                        = 57481
	_M                        = 57490
	_P                        = 57521
	_T                        = 57557
	_XMLType                  = 57572
	_add                      = 57346
	_advanced                 = 57403
	_all                      = 57347
	_alter                    = 57348
	_always                   = 57404
	_archive                  = 57405
	_as                       = 57349
	_asc                      = 57350
	_at                       = 57406
	_attributes               = 57407
	_auto                     = 57408
	_basic                    = 57409
	_bfile                    = 57410
	_binaryDouble             = 57411
	_binaryFloat              = 57412
	_bitmap                   = 57413
	_blob                     = 57414
	_blockchain               = 57415
	_buffer_pool              = 57416
	_by                       = 57351
	_byte                     = 57417
	_cache                    = 57418
	_capacity                 = 57419
	_cascade                  = 57420
	_cell_flash_cache         = 57421
	_char                     = 57352
	_character                = 57422
	_checkpoint               = 57423
	_clob                     = 57424
	_cluster                  = 57353
	_collate                  = 57425
	_column                   = 57354
	_columns                  = 57426
	_commit                   = 57427
	_compress                 = 57355
	_constraint               = 57428
	_constraints              = 57429
	_continue                 = 57430
	_create                   = 57356
	_creation                 = 57431
	_critical                 = 57432
	_cycle                    = 57433
	_data                     = 57434
	_date                     = 57357
	_day                      = 57435
	_dec                      = 57436
	_decimal                  = 57358
	_decrypt                  = 57437
	_default                  = 57359
	_deferrable               = 57438
	_deferred                 = 57439
	_definition               = 57440
	_delete                   = 57360
	_delete_all               = 57441
	_desc                     = 57361
	_disable                  = 57442
	_disable_all              = 57443
	_distribute               = 57444
	_dml                      = 57445
	_double                   = 57446
	_doubleQuoteStr           = 57576
	_drop                     = 57362
	_duplicate                = 57447
	_duplicated               = 57448
	_enable                   = 57450
	_enable_all               = 57451
	_encrypt                  = 57452
	_exceptions               = 57453
	_extended                 = 57454
	_external                 = 57455
	_filesystem_like_logging  = 57456
	_flash_cache              = 57457
	_float                    = 57363
	_for                      = 57364
	_force                    = 57458
	_foreign                  = 57459
	_freelist                 = 57460
	_freelists                = 57461
	_from                     = 57365
	_full                     = 57462
	_generated                = 57464
	_global                   = 57465
	_groups                   = 57466
	_heap                     = 57467
	_high                     = 57468
	_identified               = 57366
	_identity                 = 57469
	_ilm                      = 57470
	_immediate                = 57367
	_immutable                = 57471
	_increment                = 57368
	_index                    = 57369
	_indexing                 = 57472
	_initial                  = 57370
	_initially                = 57473
	_initrans                 = 57474
	_inmemory                 = 57475
	_int                      = 57476
	_intNumber                = 57578
	_integer                  = 57371
	_interval                 = 57477
	_into                     = 57372
	_invalidate               = 57478
	_invalidation             = 57479
	_invisible                = 57480
	_is                       = 57373
	_keep                     = 57482
	_key                      = 57483
	_level                    = 57374
	_levels                   = 57484
	_limit                    = 57485
	_local                    = 57486
	_locking                  = 57487
	_logging                  = 57488
	_long                     = 57375
	_low                      = 57489
	_maxextents               = 57376
	_maxsize                  = 57491
	_maxtrans                 = 57492
	_maxvalue                 = 57493
	_medium                   = 57494
	_memcompress              = 57495
	_memoptimize              = 57496
	_metadata                 = 57497
	_minextents               = 57498
	_minvalue                 = 57499
	_modify                   = 57377
	_month                    = 57500
	_multivalue               = 57501
	_national                 = 57502
	_nchar                    = 57503
	_nclob                    = 57504
	_next                     = 57505
	_no                       = 57506
	_nocache                  = 57507
	_nocompress               = 57378
	_nocycle                  = 57508
	_nologging                = 57509
	_nomaxvalue               = 57510
	_nominvalue               = 57511
	_none                     = 57512
	_nonquotedIdentifier      = 57577
	_noorder                  = 57513
	_noparallel               = 57514
	_norely                   = 57515
	_nosort                   = 57516
	_not                      = 57379
	_novalidate               = 57517
	_null                     = 57380
	_number                   = 57381
	_numeric                  = 57518
	_nvarchar2                = 57519
	_on                       = 57382
	_online                   = 57383
	_optimal                  = 57384
	_order                    = 57385
	_organization             = 57520
	_parallel                 = 57522
	_parent                   = 57523
	_partial                  = 57524
	_partition                = 57525
	_pctfree                  = 57386
	_pctincrease              = 57526
	_pctused                  = 57527
	_peverse                  = 57528
	_policy                   = 57529
	_precision                = 57530
	_preserve                 = 57531
	_primary                  = 57532
	_priority                 = 57533
	_private                  = 57534
	_purge                    = 57535
	_query                    = 57536
	_range                    = 57537
	_raw                      = 57387
	_read                     = 57538
	_real                     = 57539
	_recycle                  = 57540
	_references               = 57541
	_reject                   = 57542
	_rely                     = 57543
	_rename                   = 57388
	_row                      = 57389
	_rowid                    = 57390
	_rows                     = 57391
	_salt                     = 57544
	_scope                    = 57545
	_second                   = 57546
	_segment                  = 57547
	_select                   = 57392
	_service                  = 57548
	_set                      = 57393
	_sharded                  = 57549
	_sharding                 = 57550
	_singleQuoteStr           = 57575
	_smallInt                 = 57394
	_sort                     = 57551
	_spatial                  = 57552
	_start                    = 57395
	_storage                  = 57553
	_store                    = 57554
	_subpartition             = 57555
	_substitutable            = 57556
	_table                    = 57396
	_tablespace               = 57558
	_temporary                = 57559
	_time                     = 57560
	_timestamp                = 57561
	_to                       = 57397
	_unique                   = 57398
	_unlimited                = 57562
	_unusable                 = 57563
	_unused                   = 57564
	_urowid                   = 57565
	_usable                   = 57566
	_using                    = 57567
	_validate                 = 57399
	_value                    = 57568
	_varchar                  = 57400
	_varchar2                 = 57401
	_varying                  = 57569
	_visible                  = 57570
	_with                     = 57402
	_write                    = 57571
	_year                     = 57573
	_zone                     = 57574
	yyErrCode                 = 57345

	yyMaxDepth = 200
	yyTabOfs   = -698
)

var (

	yyPrec = map[int]int{
		}

	yyXLAT = map[int]int{
		    41:   0, // ')' (535x)
		 57344:   1, // $end (494x)
		    59:   2, // ';' (493x)
		    44:   3, // ',' (403x)
		 57532:   4, // _primary (391x)
		 57428:   5, // _constraint (388x)
		 57541:   6, // _references (387x)
		 57496:   7, // _memoptimize (365x)
		 57523:   8, // _parent (362x)
		 57398:   9, // _unique (358x)
		 57379:  10, // _not (357x)
		 57380:  11, // _null (354x)
		 57480:  12, // _invisible (333x)
		 57570:  13, // _visible (333x)
		 57362:  14, // _drop (319x)
		 57506:  15, // _no (314x)
		 57456:  16, // _filesystem_like_logging (306x)
		 57474:  17, // _initrans (306x)
		 57488:  18, // _logging (306x)
		 57492:  19, // _maxtrans (306x)
		 57509:  20, // _nologging (306x)
		 57527:  21, // _pctused (306x)
		 57553:  22, // _storage (306x)
		 57558:  23, // _tablespace (306x)
		 57470:  24, // _ilm (303x)
		 57475:  25, // _inmemory (300x)
		 57354:  26, // _column (291x)
		 57359:  27, // _default (276x)
		 57355:  28, // _compress (272x)
		 57378:  29, // _nocompress (270x)
		 57386:  30, // _pctfree (269x)
		 57420:  31, // _cascade (262x)
		 57453:  32, // _exceptions (259x)
		 57517:  33, // _novalidate (256x)
		 57442:  34, // _disable (254x)
		 57450:  35, // _enable (254x)
		 57567:  36, // _using (247x)
		    40:  37, // '(' (246x)
		 57515:  38, // _norely (243x)
		 57543:  39, // _rely (243x)
		 57389:  40, // _row (241x)
		 57438:  41, // _deferrable (238x)
		 57455:  42, // _external (238x)
		 57473:  43, // _initially (237x)
		 57520:  44, // _organization (237x)
		 57383:  45, // _online (235x)
		 57576:  46, // _doubleQuoteStr (234x)
		 57547:  47, // _segment (234x)
		 57577:  48, // _nonquotedIdentifier (232x)
		 57393:  49, // _set (226x)
		 57346:  50, // _add (225x)
		 57423:  51, // _checkpoint (224x)
		 57377:  52, // _modify (224x)
		 57478:  53, // _invalidate (222x)
		 57422:  54, // _character (220x)
		 57410:  55, // _bfile (219x)
		 57411:  56, // _binaryDouble (219x)
		 57412:  57, // _binaryFloat (219x)
		 57414:  58, // _blob (219x)
		 57424:  59, // _clob (219x)
		 57436:  60, // _dec (219x)
		 57446:  61, // _double (219x)
		 57476:  62, // _int (219x)
		 57477:  63, // _interval (219x)
		 57502:  64, // _national (219x)
		 57503:  65, // _nchar (219x)
		 57504:  66, // _nclob (219x)
		 57518:  67, // _numeric (219x)
		 57519:  68, // _nvarchar2 (219x)
		 57539:  69, // _real (219x)
		 57561:  70, // _timestamp (219x)
		 57565:  71, // _urowid (219x)
		 57399:  72, // _validate (219x)
		 57535:  73, // _purge (217x)
		 57550:  74, // _sharding (215x)
		 57556:  75, // _substitutable (215x)
		 57382:  76, // _on (201x)
		 57353:  77, // _cluster (198x)
		 57388:  78, // _rename (187x)
		 57352:  79, // _char (185x)
		 57390:  80, // _rowid (184x)
		 57387:  81, // _raw (183x)
		 57357:  82, // _date (182x)
		 57358:  83, // _decimal (182x)
		 57363:  84, // _float (182x)
		 57371:  85, // _integer (182x)
		 57375:  86, // _long (182x)
		 57381:  87, // _number (182x)
		 57394:  88, // _smallInt (182x)
		 57397:  89, // _to (182x)
		 57400:  90, // _varchar (182x)
		 57401:  91, // _varchar2 (182x)
		 57572:  92, // _XMLType (182x)
		    46:  93, // '.' (179x)
		 57350:  94, // _asc (177x)
		 57361:  95, // _desc (177x)
		 57452:  96, // _encrypt (176x)
		 57551:  97, // _sort (155x)
		 57545:  98, // _scope (148x)
		 57437:  99, // _decrypt (132x)
		 57464: 100, // _generated (122x)
		 57402: 101, // _with (112x)
		 57425: 102, // _collate (111x)
		 57439: 103, // _deferred (88x)
		 57563: 104, // _unusable (83x)
		 57566: 105, // _usable (83x)
		 57472: 106, // _indexing (80x)
		 57514: 107, // _noparallel (80x)
		 57516: 108, // _nosort (80x)
		 57522: 109, // _parallel (80x)
		 57528: 110, // _peverse (80x)
		 57416: 111, // _buffer_pool (72x)
		 57421: 112, // _cell_flash_cache (72x)
		 57457: 113, // _flash_cache (72x)
		 57460: 114, // _freelist (72x)
		 57461: 115, // _freelists (72x)
		 57491: 116, // _maxsize (72x)
		 57498: 117, // _minextents (72x)
		 57505: 118, // _next (72x)
		 57526: 119, // _pctincrease (72x)
		 57552: 120, // _spatial (72x)
		 57447: 121, // _duplicate (69x)
		 57650: 122, // Identifier (55x)
		 57418: 123, // _cache (54x)
		 57433: 124, // _cycle (54x)
		 57444: 125, // _distribute (54x)
		 57493: 126, // _maxvalue (54x)
		 57499: 127, // _minvalue (54x)
		 57507: 128, // _nocache (54x)
		 57508: 129, // _nocycle (54x)
		 57510: 130, // _nomaxvalue (54x)
		 57511: 131, // _nominvalue (54x)
		 57513: 132, // _noorder (54x)
		 57367: 133, // _immediate (52x)
		 57578: 134, // _intNumber (52x)
		 57482: 135, // _keep (49x)
		 57533: 136, // _priority (48x)
		 57544: 137, // _salt (47x)
		 57483: 138, // _key (44x)
		 57468: 139, // _high (43x)
		 57489: 140, // _low (43x)
		 57459: 141, // _foreign (42x)
		 57469: 142, // _identity (42x)
		 57512: 143, // _none (42x)
		 57569: 144, // _varying (42x)
		 57529: 145, // _policy (41x)
		 57426: 146, // _columns (40x)
		 57495: 147, // _memcompress (40x)
		 57564: 148, // _unused (40x)
		 57403: 149, // _advanced (39x)
		 57406: 150, // _at (39x)
		 57408: 151, // _auto (39x)
		 57413: 152, // _bitmap (39x)
		 57415: 153, // _blockchain (39x)
		 57417: 154, // _byte (39x)
		 57427: 155, // _commit (39x)
		 57429: 156, // _constraints (39x)
		 57434: 157, // _data (39x)
		 57440: 158, // _definition (39x)
		 57458: 159, // _force (39x)
		 57479: 160, // _invalidation (39x)
		 57484: 161, // _levels (39x)
		 57485: 162, // _limit (39x)
		 57487: 163, // _locking (39x)
		 57500: 164, // _month (39x)
		 57501: 165, // _multivalue (39x)
		 57525: 166, // _partition (39x)
		 57531: 167, // _preserve (39x)
		 57536: 168, // _query (39x)
		 57538: 169, // _read (39x)
		 57542: 170, // _reject (39x)
		 57546: 171, // _second (39x)
		 57554: 172, // _store (39x)
		 57559: 173, // _temporary (39x)
		 57560: 174, // _time (39x)
		 57562: 175, // _unlimited (39x)
		 57571: 176, // _write (39x)
		 57574: 177, // _zone (39x)
		 57404: 178, // _always (38x)
		 57405: 179, // _archive (38x)
		 57407: 180, // _attributes (38x)
		 57409: 181, // _basic (38x)
		 57419: 182, // _capacity (38x)
		 57430: 183, // _continue (38x)
		 57431: 184, // _creation (38x)
		 57432: 185, // _critical (38x)
		 57435: 186, // _day (38x)
		 57441: 187, // _delete_all (38x)
		 57443: 188, // _disable_all (38x)
		 57445: 189, // _dml (38x)
		 57448: 190, // _duplicated (38x)
		 57449: 191, // _E (38x)
		 57451: 192, // _enable_all (38x)
		 57454: 193, // _extended (38x)
		 57462: 194, // _full (38x)
		 57463: 195, // _G (38x)
		 57465: 196, // _global (38x)
		 57466: 197, // _groups (38x)
		 57467: 198, // _heap (38x)
		 57471: 199, // _immutable (38x)
		 57481: 200, // _K (38x)
		 57486: 201, // _local (38x)
		 57490: 202, // _M (38x)
		 57494: 203, // _medium (38x)
		 57497: 204, // _metadata (38x)
		 57521: 205, // _P (38x)
		 57524: 206, // _partial (38x)
		 57530: 207, // _precision (38x)
		 57534: 208, // _private (38x)
		 57537: 209, // _range (38x)
		 57540: 210, // _recycle (38x)
		 57548: 211, // _service (38x)
		 57549: 212, // _sharded (38x)
		 57555: 213, // _subpartition (38x)
		 57557: 214, // _T (38x)
		 57568: 215, // _value (38x)
		 57573: 216, // _year (38x)
		 57651: 217, // IdentifierOrKeyword (37x)
		 57761: 218, // UnReservedKeyword (37x)
		 57370: 219, // _initial (35x)
		 57376: 220, // _maxextents (35x)
		 57384: 221, // _optimal (35x)
		 57602: 222, // ColumnName (26x)
		 57368: 223, // _increment (17x)
		 57385: 224, // _order (17x)
		 57395: 225, // _start (17x)
		 57364: 226, // _for (12x)
		 57396: 227, // _table (11x)
		 57603: 228, // ColumnNameList (11x)
		 57611: 229, // ConstraintStateDeferrable (11x)
		 57614: 230, // ConstraintStateInitially (11x)
		 57610: 231, // ConstraintState (10x)
		 57612: 232, // ConstraintStateDeferrableClause (10x)
		 57369: 233, // _index (9x)
		 57726: 234, // PhysicalAttrClause (9x)
		 57750: 235, // StorageClause (9x)
		 57575: 236, // _singleQuoteStr (8x)
		 57758: 237, // TableName (8x)
		 57609: 238, // ConstraintName (7x)
		 57615: 239, // ConstraintStateOrEmpty (7x)
		 57696: 240, // LoggingClause (7x)
		 57727: 241, // PhysicalAttrsClause (7x)
		 57731: 242, // ReferencesClause (7x)
		 57587: 243, // CascadeOrEmpty (6x)
		 57674: 244, // InlineConstraintBody (6x)
		 57676: 245, // InlineConstraintType (6x)
		 57754: 246, // TableCompression (6x)
		    42: 247, // '*' (5x)
		 57679: 248, // InmemoryColumnClause (5x)
		 57712: 249, // NumberOrAsterisk (5x)
		 57740: 250, // SegmentAttrClause (5x)
		 57347: 251, // _all (4x)
		 57349: 252, // _as (4x)
		 57351: 253, // _by (4x)
		 57599: 254, // ColumnDef (4x)
		 57655: 255, // IdentityOptionsOrEmpty (4x)
		 57657: 256, // IlmCompressionPolicy (4x)
		 57658: 257, // IlmInmemoryPolicy (4x)
		 57659: 258, // IlmPolicyClause (4x)
		 57660: 259, // IlmTieringPolicy (4x)
		 57673: 260, // InlineConstraint (4x)
		 57680: 261, // InmemoryColumnClauses (4x)
		 57681: 262, // InmemoryColumnClausesOrEmpty (4x)
		 57721: 263, // OutOfLineConstraintBody (4x)
		 57730: 264, // RealColumnDef (4x)
		 57744: 265, // SizeClause (4x)
		 57356: 266, // _create (3x)
		 57360: 267, // _delete (3x)
		 57366: 268, // _identified (3x)
		 57583: 269, // AnsiSupportDataTypes (3x)
		 57590: 270, // CharacterDataTypes (3x)
		 57593: 271, // CollateClause (3x)
		 57604: 272, // ColumnNameListForDropColumn (3x)
		 57619: 273, // CreateIndexStmt (3x)
		 57622: 274, // Datatype (3x)
		 57623: 275, // DatetimeDataTypes (3x)
		 57629: 276, // DropColumnCheckpoint (3x)
		 57632: 277, // DropColumnProp (3x)
		 57637: 278, // DropConstraintProps (3x)
		 57691: 279, // InvisibleProp (3x)
		 57694: 280, // KeepIndexOrEmpty (3x)
		 57695: 281, // LargeObjectDataTypes (3x)
		 57697: 282, // LongAndRawDataTypes (3x)
		 57711: 283, // NumberDataTypes (3x)
		 57717: 284, // OracleSuppliedTypes (3x)
		 57718: 285, // OralceBuiltInDataTypes (3x)
		 57720: 286, // OutOfLineConstraint (3x)
		 57738: 287, // RowIdDataTypes (3x)
		 57741: 288, // SegmentAttrsClause (3x)
		 57348: 289, // _alter (2x)
		 57374: 290, // _level (2x)
		 57391: 291, // _rows (2x)
		 57580: 292, // AddColumnClause (2x)
		 57582: 293, // AlterTableStmt (2x)
		 57588: 294, // ChangeColumnClause (2x)
		 57594: 295, // CollateClauseOrEmpty (2x)
		 57621: 296, // CreateTableStmt (2x)
		 57624: 297, // DefaultClause (2x)
		 57626: 298, // DefaultOrIdentityClause (2x)
		 57630: 299, // DropColumnClause (2x)
		 57633: 300, // DropColumnProps (2x)
		 57634: 301, // DropColumnPropsOrEmpty (2x)
		 57635: 302, // DropConstraintClause (2x)
		 57638: 303, // DropTableStmt (2x)
		 57639: 304, // EmptyStmt (2x)
		 57641: 305, // EncryptClause (2x)
		 57645: 306, // Expr (2x)
		 57647: 307, // ExternalTableClause (2x)
		 57652: 308, // IdentityClause (2x)
		 57653: 309, // IdentityOption (2x)
		 57656: 310, // IlmClause (2x)
		 57662: 311, // IndexAttr (2x)
		 57665: 312, // IndexCompression (2x)
		 57666: 313, // IndexExpr (2x)
		 57671: 314, // IndexProps (2x)
		 57672: 315, // IndexType (2x)
		 57675: 316, // InlineConstraintList (2x)
		 57686: 317, // InmemoryMemCompress (2x)
		 57689: 318, // InmemoryTableClause (2x)
		 57693: 319, // IsForce (2x)
		 57700: 320, // MemoptimizeRead (2x)
		 57702: 321, // MemoptimizeWrite (2x)
		 57704: 322, // ModifyColumnClause (2x)
		 57705: 323, // ModifyColumnProp (2x)
		 57707: 324, // ModifyColumnSubstitutable (2x)
		 57708: 325, // ModifyColumnVisibility (2x)
		 57710: 326, // ModifyRealColumnProp (2x)
		 57723: 327, // ParallelClause (2x)
		 57725: 328, // PartialIndexClause (2x)
		 57734: 329, // RelTableProp (2x)
		 57742: 330, // SegmentAttrsClauseOrEmpty (2x)
		 57748: 331, // Statement (2x)
		 57751: 332, // StorageProp (2x)
		 57755: 333, // TableCompressionOrEmpty (2x)
		    61: 334, // '=' (1x)
		 57372: 335, // _into (1x)
		 57373: 336, // _is (1x)
		 57581: 337, // AlterTableClauses (1x)
		 57584: 338, // BitmapJoinIndexClause (1x)
		 57585: 339, // BlockchainTableClauses (1x)
		 57586: 340, // CascadeConstraintsOrEmpty (1x)
		 57589: 341, // ChangeColumnClauseList (1x)
		 57591: 342, // ClusterIndexClause (1x)
		 57592: 343, // ClusterName (1x)
		 57595: 344, // ColumnClauses (1x)
		 57596: 345, // ColumnCompressLock (1x)
		 57597: 346, // ColumnCompressProp (1x)
		 57598: 347, // ColumnConstraintForModify (1x)
		 57600: 348, // ColumnDefConstraint (1x)
		 57601: 349, // ColumnDefList (1x)
		 57605: 350, // ColumnNameListOrEmpty (1x)
		 57606: 351, // ColumnProps (1x)
		 57607: 352, // ColumnSortClause (1x)
		 57608: 353, // ConstraintClauses (1x)
		 57613: 354, // ConstraintStateEnable (1x)
		 57616: 355, // ConstraintStateRely (1x)
		 57617: 356, // ConstraintStateValidate (1x)
		 57618: 357, // CreateIndexInvalidation (1x)
		 57620: 358, // CreateIndexUsable (1x)
		 57625: 359, // DefaultCollateClauseOrEmpty (1x)
		 57627: 360, // DefaultOrIdentityClauseForModify (1x)
		 57628: 361, // DeferredSegmentCreation (1x)
		 57631: 362, // DropColumnOnline (1x)
		 57636: 363, // DropConstraintClauses (1x)
		 57640: 364, // EncryptAlgorithm (1x)
		 57642: 365, // EncryptClauseForModify (1x)
		 57643: 366, // EncryptionSpec (1x)
		 57644: 367, // ExceptionsClause (1x)
		 57646: 368, // ExternalPartitionClause (1x)
		 57648: 369, // HeapOrgTableClause (1x)
		 57649: 370, // IdentifiedByClause (1x)
		 57654: 371, // IdentityOptions (1x)
		 57661: 372, // ImmutableTableClauses (1x)
		 57663: 373, // IndexAttrs (1x)
		 57664: 374, // IndexClause (1x)
		 57667: 375, // IndexExprs (1x)
		 57668: 376, // IndexIlmClause (1x)
		 57669: 377, // IndexName (1x)
		 57670: 378, // IndexOrgTableClause (1x)
		 57677: 379, // InlineRefConstraint (1x)
		 57678: 380, // InmemoryAttrs (1x)
		 57682: 381, // InmemoryDistribute (1x)
		 57683: 382, // InmemoryDistributeBy (1x)
		 57684: 383, // InmemoryDistributeFor (1x)
		 57685: 384, // InmemoryDuplicate (1x)
		 57687: 385, // InmemoryProp (1x)
		 57688: 386, // InmemorySpatial (1x)
		 57690: 387, // IntergrityAlgorithm (1x)
		 57692: 388, // InvisiblePropOrEmpty (1x)
		 57698: 389, // Memoptimize (1x)
		 57699: 390, // MemoptimizeForAlterTable (1x)
		 57701: 391, // MemoptimizeReadForAlterTable (1x)
		 57703: 392, // MemoptimizeWriteForAlterTable (1x)
		 57706: 393, // ModifyColumnProps (1x)
		 57709: 394, // ModifyColumnVisibilityList (1x)
		 57713: 395, // OnCommitClause (1x)
		 57714: 396, // OnCommitDef (1x)
		 57715: 397, // OnCommitRows (1x)
		 57716: 398, // OnlineOrEmpty (1x)
		 57719: 399, // OrgClause (1x)
		 57722: 400, // OutOfLinePartStorageList (1x)
		 57724: 401, // ParentTable (1x)
		 57728: 402, // PhysicalProps (1x)
		 57729: 403, // PurgeOrEmpty (1x)
		 57732: 404, // ReferencesOnDelete (1x)
		 57733: 405, // RelTableDef (1x)
		 57735: 406, // RelTableProps (1x)
		 57736: 407, // RelTablePropsOrEmpty (1x)
		 57737: 408, // RenameColumnClause (1x)
		 57739: 409, // SaltProp (1x)
		 57743: 410, // ShardingType (1x)
		 57745: 411, // SizeUnit (1x)
		 57746: 412, // SortProp (1x)
		 57747: 413, // Start (1x)
		 57749: 414, // StatementList (1x)
		 57752: 415, // StorageProps (1x)
		 57753: 416, // TableAlias (1x)
		 57756: 417, // TableDef (1x)
		 57757: 418, // TableIndexClause (1x)
		 57759: 419, // TableProps (1x)
		 57760: 420, // TableType (1x)
		 57762: 421, // UsingIndexClause (1x)
		 57763: 422, // UsingIndexName (1x)
		 57579: 423, // $default (0x)
		 57365: 424, // _from (0x)
		 57392: 425, // _select (0x)
		 57345: 426, // error (0x)
	}

	yySymNames = []string{
		"')'",
		"$end",
		"';'",
		"','",
		"_primary",
		"_constraint",
		"_references",
		"_memoptimize",
		"_parent",
		"_unique",
		"_not",
		"_null",
		"_invisible",
		"_visible",
		"_drop",
		"_no",
		"_filesystem_like_logging",
		"_initrans",
		"_logging",
		"_maxtrans",
		"_nologging",
		"_pctused",
		"_storage",
		"_tablespace",
		"_ilm",
		"_inmemory",
		"_column",
		"_default",
		"_compress",
		"_nocompress",
		"_pctfree",
		"_cascade",
		"_exceptions",
		"_novalidate",
		"_disable",
		"_enable",
		"_using",
		"'('",
		"_norely",
		"_rely",
		"_row",
		"_deferrable",
		"_external",
		"_initially",
		"_organization",
		"_online",
		"_doubleQuoteStr",
		"_segment",
		"_nonquotedIdentifier",
		"_set",
		"_add",
		"_checkpoint",
		"_modify",
		"_invalidate",
		"_character",
		"_bfile",
		"_binaryDouble",
		"_binaryFloat",
		"_blob",
		"_clob",
		"_dec",
		"_double",
		"_int",
		"_interval",
		"_national",
		"_nchar",
		"_nclob",
		"_numeric",
		"_nvarchar2",
		"_real",
		"_timestamp",
		"_urowid",
		"_validate",
		"_purge",
		"_sharding",
		"_substitutable",
		"_on",
		"_cluster",
		"_rename",
		"_char",
		"_rowid",
		"_raw",
		"_date",
		"_decimal",
		"_float",
		"_integer",
		"_long",
		"_number",
		"_smallInt",
		"_to",
		"_varchar",
		"_varchar2",
		"_XMLType",
		"'.'",
		"_asc",
		"_desc",
		"_encrypt",
		"_sort",
		"_scope",
		"_decrypt",
		"_generated",
		"_with",
		"_collate",
		"_deferred",
		"_unusable",
		"_usable",
		"_indexing",
		"_noparallel",
		"_nosort",
		"_parallel",
		"_peverse",
		"_buffer_pool",
		"_cell_flash_cache",
		"_flash_cache",
		"_freelist",
		"_freelists",
		"_maxsize",
		"_minextents",
		"_next",
		"_pctincrease",
		"_spatial",
		"_duplicate",
		"Identifier",
		"_cache",
		"_cycle",
		"_distribute",
		"_maxvalue",
		"_minvalue",
		"_nocache",
		"_nocycle",
		"_nomaxvalue",
		"_nominvalue",
		"_noorder",
		"_immediate",
		"_intNumber",
		"_keep",
		"_priority",
		"_salt",
		"_key",
		"_high",
		"_low",
		"_foreign",
		"_identity",
		"_none",
		"_varying",
		"_policy",
		"_columns",
		"_memcompress",
		"_unused",
		"_advanced",
		"_at",
		"_auto",
		"_bitmap",
		"_blockchain",
		"_byte",
		"_commit",
		"_constraints",
		"_data",
		"_definition",
		"_force",
		"_invalidation",
		"_levels",
		"_limit",
		"_locking",
		"_month",
		"_multivalue",
		"_partition",
		"_preserve",
		"_query",
		"_read",
		"_reject",
		"_second",
		"_store",
		"_temporary",
		"_time",
		"_unlimited",
		"_write",
		"_zone",
		"_always",
		"_archive",
		"_attributes",
		"_basic",
		"_capacity",
		"_continue",
		"_creation",
		"_critical",
		"_day",
		"_delete_all",
		"_disable_all",
		"_dml",
		"_duplicated",
		"_E",
		"_enable_all",
		"_extended",
		"_full",
		"_G",
		"_global",
		"_groups",
		"_heap",
		"_immutable",
		"_K",
		"_local",
		"_M",
		"_medium",
		"_metadata",
		"_P",
		"_partial",
		"_precision",
		"_private",
		"_range",
		"_recycle",
		"_service",
		"_sharded",
		"_subpartition",
		"_T",
		"_value",
		"_year",
		"IdentifierOrKeyword",
		"UnReservedKeyword",
		"_initial",
		"_maxextents",
		"_optimal",
		"ColumnName",
		"_increment",
		"_order",
		"_start",
		"_for",
		"_table",
		"ColumnNameList",
		"ConstraintStateDeferrable",
		"ConstraintStateInitially",
		"ConstraintState",
		"ConstraintStateDeferrableClause",
		"_index",
		"PhysicalAttrClause",
		"StorageClause",
		"_singleQuoteStr",
		"TableName",
		"ConstraintName",
		"ConstraintStateOrEmpty",
		"LoggingClause",
		"PhysicalAttrsClause",
		"ReferencesClause",
		"CascadeOrEmpty",
		"InlineConstraintBody",
		"InlineConstraintType",
		"TableCompression",
		"'*'",
		"InmemoryColumnClause",
		"NumberOrAsterisk",
		"SegmentAttrClause",
		"_all",
		"_as",
		"_by",
		"ColumnDef",
		"IdentityOptionsOrEmpty",
		"IlmCompressionPolicy",
		"IlmInmemoryPolicy",
		"IlmPolicyClause",
		"IlmTieringPolicy",
		"InlineConstraint",
		"InmemoryColumnClauses",
		"InmemoryColumnClausesOrEmpty",
		"OutOfLineConstraintBody",
		"RealColumnDef",
		"SizeClause",
		"_create",
		"_delete",
		"_identified",
		"AnsiSupportDataTypes",
		"CharacterDataTypes",
		"CollateClause",
		"ColumnNameListForDropColumn",
		"CreateIndexStmt",
		"Datatype",
		"DatetimeDataTypes",
		"DropColumnCheckpoint",
		"DropColumnProp",
		"DropConstraintProps",
		"InvisibleProp",
		"KeepIndexOrEmpty",
		"LargeObjectDataTypes",
		"LongAndRawDataTypes",
		"NumberDataTypes",
		"OracleSuppliedTypes",
		"OralceBuiltInDataTypes",
		"OutOfLineConstraint",
		"RowIdDataTypes",
		"SegmentAttrsClause",
		"_alter",
		"_level",
		"_rows",
		"AddColumnClause",
		"AlterTableStmt",
		"ChangeColumnClause",
		"CollateClauseOrEmpty",
		"CreateTableStmt",
		"DefaultClause",
		"DefaultOrIdentityClause",
		"DropColumnClause",
		"DropColumnProps",
		"DropColumnPropsOrEmpty",
		"DropConstraintClause",
		"DropTableStmt",
		"EmptyStmt",
		"EncryptClause",
		"Expr",
		"ExternalTableClause",
		"IdentityClause",
		"IdentityOption",
		"IlmClause",
		"IndexAttr",
		"IndexCompression",
		"IndexExpr",
		"IndexProps",
		"IndexType",
		"InlineConstraintList",
		"InmemoryMemCompress",
		"InmemoryTableClause",
		"IsForce",
		"MemoptimizeRead",
		"MemoptimizeWrite",
		"ModifyColumnClause",
		"ModifyColumnProp",
		"ModifyColumnSubstitutable",
		"ModifyColumnVisibility",
		"ModifyRealColumnProp",
		"ParallelClause",
		"PartialIndexClause",
		"RelTableProp",
		"SegmentAttrsClauseOrEmpty",
		"Statement",
		"StorageProp",
		"TableCompressionOrEmpty",
		"'='",
		"_into",
		"_is",
		"AlterTableClauses",
		"BitmapJoinIndexClause",
		"BlockchainTableClauses",
		"CascadeConstraintsOrEmpty",
		"ChangeColumnClauseList",
		"ClusterIndexClause",
		"ClusterName",
		"ColumnClauses",
		"ColumnCompressLock",
		"ColumnCompressProp",
		"ColumnConstraintForModify",
		"ColumnDefConstraint",
		"ColumnDefList",
		"ColumnNameListOrEmpty",
		"ColumnProps",
		"ColumnSortClause",
		"ConstraintClauses",
		"ConstraintStateEnable",
		"ConstraintStateRely",
		"ConstraintStateValidate",
		"CreateIndexInvalidation",
		"CreateIndexUsable",
		"DefaultCollateClauseOrEmpty",
		"DefaultOrIdentityClauseForModify",
		"DeferredSegmentCreation",
		"DropColumnOnline",
		"DropConstraintClauses",
		"EncryptAlgorithm",
		"EncryptClauseForModify",
		"EncryptionSpec",
		"ExceptionsClause",
		"ExternalPartitionClause",
		"HeapOrgTableClause",
		"IdentifiedByClause",
		"IdentityOptions",
		"ImmutableTableClauses",
		"IndexAttrs",
		"IndexClause",
		"IndexExprs",
		"IndexIlmClause",
		"IndexName",
		"IndexOrgTableClause",
		"InlineRefConstraint",
		"InmemoryAttrs",
		"InmemoryDistribute",
		"InmemoryDistributeBy",
		"InmemoryDistributeFor",
		"InmemoryDuplicate",
		"InmemoryProp",
		"InmemorySpatial",
		"IntergrityAlgorithm",
		"InvisiblePropOrEmpty",
		"Memoptimize",
		"MemoptimizeForAlterTable",
		"MemoptimizeReadForAlterTable",
		"MemoptimizeWriteForAlterTable",
		"ModifyColumnProps",
		"ModifyColumnVisibilityList",
		"OnCommitClause",
		"OnCommitDef",
		"OnCommitRows",
		"OnlineOrEmpty",
		"OrgClause",
		"OutOfLinePartStorageList",
		"ParentTable",
		"PhysicalProps",
		"PurgeOrEmpty",
		"ReferencesOnDelete",
		"RelTableDef",
		"RelTableProps",
		"RelTablePropsOrEmpty",
		"RenameColumnClause",
		"SaltProp",
		"ShardingType",
		"SizeUnit",
		"SortProp",
		"Start",
		"StatementList",
		"StorageProps",
		"TableAlias",
		"TableDef",
		"TableIndexClause",
		"TableProps",
		"TableType",
		"UsingIndexClause",
		"UsingIndexName",
		"$default",
		"_from",
		"_select",
		"error",
	}

	yyTokenLiteralStrings = map[int]string{
		57576: "double quotes string",
		57577: "nonquoted identifier",
		57578: "int number",
		57575: "single quotes string",
	}

	yyReductions = map[int]struct{xsym, components int}{
		0: {0, 1},
		1: {413, 1},
		2: {414, 1},
		3: {414, 3},
		4: {331, 1},
		5: {331, 1},
		6: {331, 1},
		7: {331, 1},
		8: {331, 1},
		9: {304, 0},
		10: {237, 1},
		11: {237, 3},
		12: {228, 1},
		13: {228, 3},
		14: {222, 1},
		15: {343, 1},
		16: {343, 3},
		17: {377, 1},
		18: {377, 3},
		19: {422, 1},
		20: {422, 3},
		21: {217, 1},
		22: {217, 1},
		23: {122, 1},
		24: {122, 1},
		25: {218, 1},
		26: {218, 1},
		27: {218, 1},
		28: {218, 1},
		29: {218, 1},
		30: {218, 1},
		31: {218, 1},
		32: {218, 1},
		33: {218, 1},
		34: {218, 1},
		35: {218, 1},
		36: {218, 1},
		37: {218, 1},
		38: {218, 1},
		39: {218, 1},
		40: {218, 1},
		41: {218, 1},
		42: {218, 1},
		43: {218, 1},
		44: {218, 1},
		45: {218, 1},
		46: {218, 1},
		47: {218, 1},
		48: {218, 1},
		49: {218, 1},
		50: {218, 1},
		51: {218, 1},
		52: {218, 1},
		53: {218, 1},
		54: {218, 1},
		55: {218, 1},
		56: {218, 1},
		57: {218, 1},
		58: {218, 1},
		59: {218, 1},
		60: {218, 1},
		61: {218, 1},
		62: {218, 1},
		63: {218, 1},
		64: {218, 1},
		65: {218, 1},
		66: {218, 1},
		67: {218, 1},
		68: {218, 1},
		69: {218, 1},
		70: {218, 1},
		71: {218, 1},
		72: {218, 1},
		73: {218, 1},
		74: {218, 1},
		75: {218, 1},
		76: {218, 1},
		77: {218, 1},
		78: {218, 1},
		79: {218, 1},
		80: {218, 1},
		81: {218, 1},
		82: {218, 1},
		83: {218, 1},
		84: {218, 1},
		85: {218, 1},
		86: {218, 1},
		87: {218, 1},
		88: {218, 1},
		89: {218, 1},
		90: {218, 1},
		91: {218, 1},
		92: {218, 1},
		93: {218, 1},
		94: {218, 1},
		95: {218, 1},
		96: {218, 1},
		97: {218, 1},
		98: {218, 1},
		99: {218, 1},
		100: {218, 1},
		101: {218, 1},
		102: {218, 1},
		103: {218, 1},
		104: {218, 1},
		105: {218, 1},
		106: {218, 1},
		107: {218, 1},
		108: {218, 1},
		109: {218, 1},
		110: {218, 1},
		111: {218, 1},
		112: {218, 1},
		113: {218, 1},
		114: {218, 1},
		115: {218, 1},
		116: {218, 1},
		117: {218, 1},
		118: {218, 1},
		119: {218, 1},
		120: {218, 1},
		121: {218, 1},
		122: {218, 1},
		123: {218, 1},
		124: {218, 1},
		125: {218, 1},
		126: {218, 1},
		127: {218, 1},
		128: {218, 1},
		129: {218, 1},
		130: {218, 1},
		131: {218, 1},
		132: {218, 1},
		133: {218, 1},
		134: {218, 1},
		135: {218, 1},
		136: {218, 1},
		137: {218, 1},
		138: {218, 1},
		139: {218, 1},
		140: {218, 1},
		141: {218, 1},
		142: {218, 1},
		143: {218, 1},
		144: {218, 1},
		145: {218, 1},
		146: {218, 1},
		147: {218, 1},
		148: {218, 1},
		149: {218, 1},
		150: {218, 1},
		151: {218, 1},
		152: {218, 1},
		153: {218, 1},
		154: {218, 1},
		155: {218, 1},
		156: {218, 1},
		157: {218, 1},
		158: {218, 1},
		159: {218, 1},
		160: {218, 1},
		161: {218, 1},
		162: {218, 1},
		163: {218, 1},
		164: {218, 1},
		165: {218, 1},
		166: {218, 1},
		167: {218, 1},
		168: {218, 1},
		169: {218, 1},
		170: {218, 1},
		171: {218, 1},
		172: {218, 1},
		173: {218, 1},
		174: {218, 1},
		175: {218, 1},
		176: {218, 1},
		177: {218, 1},
		178: {218, 1},
		179: {218, 1},
		180: {218, 1},
		181: {218, 1},
		182: {218, 1},
		183: {218, 1},
		184: {218, 1},
		185: {218, 1},
		186: {218, 1},
		187: {218, 1},
		188: {218, 1},
		189: {218, 1},
		190: {218, 1},
		191: {218, 1},
		192: {218, 1},
		193: {218, 1},
		194: {218, 1},
		195: {218, 1},
		196: {293, 5},
		197: {337, 1},
		198: {337, 1},
		199: {344, 1},
		200: {344, 1},
		201: {341, 1},
		202: {341, 2},
		203: {294, 1},
		204: {294, 1},
		205: {294, 1},
		206: {292, 6},
		207: {351, 0},
		208: {400, 0},
		209: {349, 1},
		210: {349, 3},
		211: {254, 1},
		212: {264, 8},
		213: {295, 0},
		214: {295, 1},
		215: {271, 2},
		216: {412, 0},
		217: {412, 1},
		218: {388, 0},
		219: {388, 1},
		220: {279, 1},
		221: {279, 1},
		222: {298, 0},
		223: {298, 1},
		224: {298, 1},
		225: {297, 2},
		226: {297, 4},
		227: {308, 4},
		228: {308, 5},
		229: {308, 6},
		230: {308, 8},
		231: {255, 0},
		232: {255, 3},
		233: {371, 0},
		234: {371, 1},
		235: {371, 2},
		236: {309, 3},
		237: {309, 4},
		238: {309, 3},
		239: {309, 2},
		240: {309, 1},
		241: {309, 2},
		242: {309, 1},
		243: {309, 1},
		244: {309, 1},
		245: {309, 2},
		246: {309, 1},
		247: {309, 1},
		248: {309, 1},
		249: {305, 0},
		250: {305, 2},
		251: {366, 4},
		252: {364, 0},
		253: {364, 2},
		254: {370, 0},
		255: {370, 3},
		256: {387, 0},
		257: {387, 1},
		258: {409, 0},
		259: {409, 1},
		260: {409, 2},
		261: {348, 0},
		262: {348, 1},
		263: {348, 1},
		264: {316, 1},
		265: {316, 2},
		266: {322, 4},
		267: {322, 4},
		268: {322, 1},
		269: {393, 1},
		270: {393, 3},
		271: {323, 1},
		272: {326, 6},
		273: {360, 2},
		274: {360, 1},
		275: {365, 1},
		276: {365, 1},
		277: {347, 0},
		278: {347, 1},
		279: {394, 1},
		280: {394, 3},
		281: {325, 2},
		282: {324, 7},
		283: {324, 8},
		284: {319, 0},
		285: {319, 1},
		286: {299, 5},
		287: {299, 4},
		288: {299, 4},
		289: {299, 4},
		290: {272, 2},
		291: {272, 3},
		292: {301, 0},
		293: {301, 1},
		294: {300, 1},
		295: {300, 2},
		296: {277, 2},
		297: {277, 1},
		298: {362, 0},
		299: {362, 1},
		300: {276, 0},
		301: {276, 2},
		302: {408, 5},
		303: {353, 2},
		304: {353, 5},
		305: {353, 5},
		306: {353, 7},
		307: {353, 5},
		308: {353, 1},
		309: {363, 1},
		310: {363, 2},
		311: {302, 5},
		312: {302, 7},
		313: {302, 5},
		314: {243, 0},
		315: {243, 1},
		316: {278, 2},
		317: {280, 0},
		318: {280, 2},
		319: {398, 0},
		320: {398, 1},
		321: {296, 8},
		322: {420, 0},
		323: {420, 2},
		324: {420, 2},
		325: {420, 1},
		326: {420, 1},
		327: {420, 1},
		328: {420, 1},
		329: {420, 2},
		330: {410, 0},
		331: {410, 3},
		332: {410, 3},
		333: {410, 4},
		334: {410, 3},
		335: {401, 0},
		336: {401, 2},
		337: {417, 1},
		338: {405, 7},
		339: {372, 0},
		340: {339, 0},
		341: {359, 0},
		342: {359, 2},
		343: {395, 2},
		344: {396, 0},
		345: {396, 4},
		346: {396, 4},
		347: {397, 0},
		348: {397, 4},
		349: {397, 4},
		350: {402, 0},
		351: {402, 5},
		352: {402, 3},
		353: {402, 2},
		354: {402, 5},
		355: {361, 0},
		356: {361, 3},
		357: {361, 3},
		358: {330, 0},
		359: {330, 1},
		360: {288, 1},
		361: {288, 2},
		362: {250, 1},
		363: {250, 2},
		364: {250, 3},
		365: {250, 1},
		366: {250, 1},
		367: {241, 1},
		368: {241, 2},
		369: {234, 2},
		370: {234, 2},
		371: {234, 2},
		372: {234, 2},
		373: {234, 1},
		374: {240, 1},
		375: {240, 1},
		376: {240, 1},
		377: {333, 0},
		378: {333, 1},
		379: {246, 1},
		380: {246, 3},
		381: {246, 4},
		382: {246, 4},
		383: {246, 5},
		384: {246, 1},
		385: {346, 0},
		386: {346, 2},
		387: {346, 3},
		388: {346, 3},
		389: {346, 2},
		390: {346, 3},
		391: {346, 3},
		392: {345, 0},
		393: {345, 3},
		394: {345, 4},
		395: {318, 0},
		396: {318, 3},
		397: {318, 3},
		398: {318, 1},
		399: {380, 5},
		400: {317, 0},
		401: {317, 3},
		402: {317, 3},
		403: {317, 4},
		404: {317, 4},
		405: {317, 3},
		406: {317, 4},
		407: {317, 4},
		408: {317, 2},
		409: {317, 2},
		410: {385, 0},
		411: {385, 2},
		412: {385, 2},
		413: {385, 2},
		414: {385, 2},
		415: {385, 2},
		416: {381, 0},
		417: {381, 3},
		418: {382, 0},
		419: {382, 1},
		420: {382, 3},
		421: {382, 2},
		422: {382, 2},
		423: {383, 0},
		424: {383, 3},
		425: {383, 3},
		426: {383, 3},
		427: {383, 3},
		428: {384, 0},
		429: {384, 1},
		430: {384, 2},
		431: {384, 2},
		432: {386, 0},
		433: {386, 2},
		434: {262, 0},
		435: {262, 1},
		436: {261, 1},
		437: {261, 2},
		438: {248, 4},
		439: {248, 5},
		440: {248, 5},
		441: {310, 0},
		442: {310, 4},
		443: {310, 4},
		444: {310, 4},
		445: {310, 4},
		446: {310, 2},
		447: {310, 2},
		448: {310, 2},
		449: {258, 1},
		450: {258, 1},
		451: {258, 1},
		452: {256, 0},
		453: {259, 0},
		454: {257, 0},
		455: {399, 3},
		456: {399, 3},
		457: {399, 2},
		458: {369, 3},
		459: {378, 0},
		460: {307, 0},
		461: {368, 4},
		462: {368, 6},
		463: {419, 0},
		464: {407, 0},
		465: {407, 3},
		466: {406, 1},
		467: {406, 3},
		468: {329, 1},
		469: {329, 1},
		470: {273, 9},
		471: {315, 0},
		472: {315, 1},
		473: {315, 1},
		474: {315, 1},
		475: {376, 0},
		476: {374, 1},
		477: {374, 1},
		478: {374, 1},
		479: {342, 3},
		480: {373, 1},
		481: {373, 2},
		482: {311, 1},
		483: {311, 1},
		484: {311, 1},
		485: {311, 2},
		486: {311, 2},
		487: {311, 1},
		488: {311, 1},
		489: {311, 1},
		490: {311, 1},
		491: {311, 1},
		492: {311, 1},
		493: {311, 1},
		494: {311, 1},
		495: {312, 1},
		496: {312, 2},
		497: {312, 2},
		498: {312, 3},
		499: {312, 3},
		500: {312, 1},
		501: {328, 2},
		502: {328, 2},
		503: {327, 1},
		504: {327, 2},
		505: {327, 1},
		506: {418, 6},
		507: {416, 0},
		508: {416, 1},
		509: {375, 1},
		510: {375, 3},
		511: {313, 2},
		512: {352, 0},
		513: {352, 1},
		514: {352, 1},
		515: {314, 0},
		516: {338, 0},
		517: {358, 0},
		518: {358, 1},
		519: {358, 1},
		520: {357, 0},
		521: {357, 2},
		522: {357, 2},
		523: {303, 5},
		524: {340, 0},
		525: {340, 2},
		526: {403, 0},
		527: {403, 1},
		528: {274, 1},
		529: {274, 1},
		530: {274, 1},
		531: {249, 1},
		532: {249, 1},
		533: {285, 1},
		534: {285, 1},
		535: {285, 1},
		536: {285, 1},
		537: {285, 1},
		538: {285, 1},
		539: {270, 1},
		540: {270, 4},
		541: {270, 5},
		542: {270, 5},
		543: {270, 4},
		544: {270, 5},
		545: {270, 5},
		546: {270, 1},
		547: {270, 4},
		548: {270, 4},
		549: {283, 1},
		550: {283, 4},
		551: {283, 6},
		552: {283, 1},
		553: {283, 4},
		554: {283, 1},
		555: {283, 1},
		556: {282, 1},
		557: {282, 2},
		558: {282, 4},
		559: {275, 1},
		560: {275, 1},
		561: {275, 4},
		562: {275, 7},
		563: {275, 8},
		564: {275, 4},
		565: {275, 7},
		566: {275, 4},
		567: {275, 7},
		568: {275, 10},
		569: {275, 7},
		570: {281, 1},
		571: {281, 1},
		572: {281, 1},
		573: {281, 1},
		574: {287, 1},
		575: {287, 1},
		576: {287, 4},
		577: {269, 4},
		578: {269, 5},
		579: {269, 5},
		580: {269, 5},
		581: {269, 4},
		582: {269, 5},
		583: {269, 6},
		584: {269, 5},
		585: {269, 6},
		586: {269, 1},
		587: {269, 4},
		588: {269, 6},
		589: {269, 1},
		590: {269, 4},
		591: {269, 6},
		592: {269, 1},
		593: {269, 4},
		594: {269, 6},
		595: {269, 1},
		596: {269, 1},
		597: {269, 1},
		598: {269, 2},
		599: {269, 1},
		600: {284, 1},
		601: {238, 2},
		602: {260, 2},
		603: {260, 1},
		604: {244, 2},
		605: {244, 2},
		606: {245, 1},
		607: {245, 2},
		608: {245, 1},
		609: {245, 2},
		610: {242, 4},
		611: {350, 0},
		612: {350, 3},
		613: {404, 0},
		614: {404, 3},
		615: {404, 4},
		616: {239, 0},
		617: {239, 1},
		618: {231, 6},
		619: {232, 0},
		620: {232, 1},
		621: {232, 2},
		622: {232, 1},
		623: {232, 2},
		624: {229, 1},
		625: {229, 2},
		626: {230, 2},
		627: {230, 2},
		628: {355, 0},
		629: {355, 1},
		630: {355, 1},
		631: {421, 0},
		632: {421, 3},
		633: {421, 5},
		634: {421, 3},
		635: {354, 0},
		636: {354, 1},
		637: {354, 1},
		638: {356, 0},
		639: {356, 1},
		640: {356, 1},
		641: {367, 0},
		642: {367, 3},
		643: {379, 3},
		644: {379, 2},
		645: {379, 3},
		646: {379, 2},
		647: {286, 2},
		648: {286, 1},
		649: {263, 5},
		650: {263, 6},
		651: {263, 7},
		652: {235, 4},
		653: {415, 1},
		654: {415, 2},
		655: {332, 2},
		656: {332, 2},
		657: {332, 2},
		658: {332, 2},
		659: {332, 2},
		660: {332, 2},
		661: {332, 2},
		662: {332, 2},
		663: {332, 2},
		664: {332, 3},
		665: {332, 1},
		666: {332, 2},
		667: {332, 2},
		668: {332, 2},
		669: {332, 2},
		670: {332, 2},
		671: {332, 2},
		672: {332, 2},
		673: {332, 2},
		674: {332, 2},
		675: {332, 2},
		676: {332, 2},
		677: {332, 1},
		678: {265, 2},
		679: {411, 0},
		680: {411, 1},
		681: {411, 1},
		682: {411, 1},
		683: {411, 1},
		684: {411, 1},
		685: {411, 1},
		686: {390, 2},
		687: {391, 1},
		688: {391, 4},
		689: {392, 1},
		690: {392, 4},
		691: {389, 2},
		692: {320, 0},
		693: {320, 3},
		694: {321, 0},
		695: {321, 3},
		696: {306, 1},
		697: {306, 1},
	}

	yyXErrors = map[yyXError]string{
	}

	yyParseTab = [1065][]uint16{
		// 0
		{1: 689, 689, 14: 709, 266: 708, 273: 705, 289: 707, 293: 703, 296: 704, 303: 706, 702, 331: 701, 413: 699, 700},
		{1: 698},
		{1: 697, 1761},
		{1: 696, 696},
		{1: 694, 694},
		// 5
		{1: 693, 693},
		{1: 692, 692},
		{1: 691, 691},
		{1: 690, 690},
		{227: 1604},
		// 10
		{9: 903, 152: 904, 901, 165: 905, 190: 899, 196: 896, 199: 900, 208: 897, 212: 898, 227: 376, 233: 227, 315: 902, 420: 895},
		{227: 710},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 711, 713, 237: 887},
		{688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 14: 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 26: 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 688, 46: 688, 688, 688, 688, 688, 52: 688, 72: 688, 688, 688, 76: 688, 688, 688, 93: 893},
		{677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677, 677},
		// 15
		{676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676, 676},
		{},
		{674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 674, 103: 674, 674, 674, 674, 674, 674, 674, 674, 120: 674, 674, 133: 674, 135: 674, 137: 674, 141: 674, 236: 674},
		{673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673, 673},
		{672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672, 672},
		// 20
		{671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671, 671},
		{670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670, 670},
		{669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669, 669},
		{668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668, 668},
		{667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667, 667},
		// 25
		{666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666, 666},
		{665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665, 665},
		{664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664, 664},
		{663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663, 663},
		{662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662, 662},
		// 30
		{661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661},
		{660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660},
		{659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659, 659},
		{658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658, 658},
		{657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657, 657},
		// 35
		{656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656, 656},
		{655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655, 655},
		{654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654, 654},
		{653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 653},
		{652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652, 652},
		// 40
		{651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651},
		{650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650},
		{649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649, 649},
		{648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648},
		{647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647, 647},
		// 45
		{646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646, 646},
		{645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645, 645},
		{644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644, 644},
		{643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643, 643},
		{642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642, 642},
		// 50
		{641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641, 641},
		{640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640, 640},
		{639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639, 639},
		{638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638, 638},
		{637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637, 637},
		// 55
		{636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636, 636},
		{635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635, 635},
		{634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634, 634},
		{633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633, 633},
		{632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632, 632},
		// 60
		{631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631},
		{630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630, 630},
		{629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629},
		{628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628},
		{627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627},
		// 65
		{626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626, 626},
		{625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625, 625},
		{624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624, 624},
		{623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623, 623},
		{622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622, 622},
		// 70
		{621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621, 621},
		{620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620, 620},
		{619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619, 619},
		{618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618, 618},
		{617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617},
		// 75
		{616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616, 616},
		{615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615, 615},
		{614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614, 614},
		{613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613, 613},
		{612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612, 612},
		// 80
		{611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611, 611},
		{610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610, 610},
		{609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609, 609},
		{608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608},
		{607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607, 607},
		// 85
		{606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606, 606},
		{605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605, 605},
		{604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604, 604},
		{603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603, 603},
		{602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602},
		// 90
		{601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601, 601},
		{600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600},
		{599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599, 599},
		{598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598, 598},
		{597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597},
		// 95
		{596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596, 596},
		{595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595, 595},
		{594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594, 594},
		{593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593, 593},
		{592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592, 592},
		// 100
		{591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591, 591},
		{590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590, 590},
		{589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589, 589},
		{588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588, 588},
		{587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587, 587},
		// 105
		{586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586, 586},
		{585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585, 585},
		{584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584, 584},
		{583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583, 583},
		{582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582, 582},
		// 110
		{581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581, 581},
		{580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580, 580},
		{579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579, 579},
		{578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578, 578},
		{577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577, 577},
		// 115
		{576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576, 576},
		{575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575, 575},
		{574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574, 574},
		{573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573, 573},
		{572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572, 572},
		// 120
		{571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571, 571},
		{570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570, 570},
		{569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569, 569},
		{568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568},
		{567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567, 567},
		// 125
		{566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566, 566},
		{565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565, 565},
		{564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564, 564},
		{563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563, 563},
		{562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562, 562},
		// 130
		{561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561, 561},
		{560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560, 560},
		{559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559, 559},
		{558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558, 558},
		{557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557, 557},
		// 135
		{556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556},
		{555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555, 555},
		{554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554, 554},
		{553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553, 553},
		{552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552, 552},
		// 140
		{551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551, 551},
		{550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550, 550},
		{549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 549},
		{548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548, 548},
		{547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547, 547},
		// 145
		{546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546, 546},
		{545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545, 545},
		{544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544},
		{543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543, 543},
		{542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542, 542},
		// 150
		{541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541, 541},
		{540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540, 540},
		{539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539, 539},
		{538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538, 538},
		{537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537, 537},
		// 155
		{536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536},
		{535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535, 535},
		{534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534, 534},
		{533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533, 533},
		{532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532, 532},
		// 160
		{531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531, 531},
		{530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530, 530},
		{529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529, 529},
		{528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528, 528},
		{527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527, 527},
		// 165
		{526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526, 526},
		{525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525, 525},
		{524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524, 524},
		{523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523, 523},
		{522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522, 522},
		// 170
		{521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521, 521},
		{520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520},
		{519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519, 519},
		{518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518, 518},
		{517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517, 517},
		// 175
		{516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516, 516},
		{515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515, 515},
		{514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514},
		{513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513, 513},
		{512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512},
		// 180
		{511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511, 511},
		{510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510, 510},
		{509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509, 509},
		{508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508, 508},
		{507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507, 507},
		// 185
		{506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506},
		{505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505},
		{504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504},
		{503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503, 503},
		{1: 174, 174, 31: 889, 73: 174, 340: 888},
		// 190
		{1: 172, 172, 73: 892, 403: 891},
		{156: 890},
		{1: 173, 173, 73: 173},
		{1: 175, 175},
		{1: 171, 171},
		// 195
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 894, 713},
		{687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 14: 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 26: 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 687, 46: 687, 687, 687, 687, 687, 52: 687, 72: 687, 687, 687, 76: 687, 687, 687},
		{227: 1040},
		{173: 1039},
		{173: 1038},
		// 200
		{227: 373},
		{227: 372},
		{153: 1037, 227: 371},
		{227: 370},
		{233: 906},
		// 205
		{233: 226},
		{233: 225},
		{233: 224},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 907, 713, 377: 908},
		{76: 681, 93: 1035},
		// 210
		{76: 223, 376: 909},
		{76: 910},
		{182, 182, 182, 4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 77: 915, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 182, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 711, 713, 237: 916, 338: 914, 342: 912, 374: 911, 418: 913},
		{181, 181, 181, 103: 181, 1029, 1028, 133: 181, 358: 1027},
		{222, 222, 222, 103: 222, 222, 222, 133: 222},
		// 215
		{221, 221, 221, 103: 221, 221, 221, 133: 221},
		{220, 220, 220, 103: 220, 220, 220, 133: 220},
		{46: 715, 48: 714, 122: 931, 343: 932},
		{37: 191, 46: 715, 48: 714, 122: 918, 416: 917},
		{37: 919},
		// 220
		{37: 190},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 923, 313: 922, 375: 921},
		{684, 684, 684, 684, 7: 684, 684, 10: 684, 12: 684, 684, 684, 684, 24: 684, 684, 684, 31: 684, 45: 684, 49: 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 75: 684, 79: 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 684, 94: 684, 684},
		{927, 3: 928},
		{189, 3: 189},
		// 225
		{186, 3: 186, 94: 925, 926, 352: 924},
		{187, 3: 187},
		{185, 3: 185},
		{184, 3: 184},
		{183, 183, 183, 103: 183, 183, 183, 133: 183, 314: 930},
		// 230
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 923, 313: 929},
		{188, 3: 188},
		{192, 192, 192, 103: 192, 192, 192, 133: 192},
		{12: 683, 683, 16: 683, 683, 683, 683, 683, 683, 683, 683, 28: 683, 683, 683, 45: 683, 93: 1025, 97: 683, 106: 683, 683, 683, 683, 683},
		{12: 953, 952, 16: 942, 937, 940, 938, 941, 936, 961, 947, 28: 956, 957, 935, 45: 946, 97: 949, 106: 958, 960, 950, 959, 951, 234: 933, 939, 240: 945, 934, 311: 944, 948, 327: 955, 954, 373: 943},
		// 235
		{331, 331, 331, 7: 331, 331, 12: 331, 331, 15: 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 28: 331, 331, 331, 40: 331, 45: 331, 97: 331, 103: 331, 331, 331, 331, 331, 331, 331, 331, 133: 331},
		{216, 216, 216, 12: 216, 216, 16: 216, 937, 216, 938, 216, 936, 961, 216, 28: 216, 216, 935, 45: 216, 97: 216, 103: 216, 216, 216, 216, 216, 216, 216, 216, 133: 216, 234: 1024, 939},
		{134: 1023},
		{134: 1022},
		{134: 1021},
		// 240
		{134: 1020},
		{325, 325, 325, 7: 325, 325, 12: 325, 325, 15: 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 325, 28: 325, 325, 325, 40: 325, 45: 325, 97: 325, 103: 325, 325, 325, 325, 325, 325, 325, 325, 133: 325},
		{324, 324, 324, 7: 324, 324, 12: 324, 324, 15: 324, 324, 324, 324, 324, 324, 324, 324, 324, 324, 324, 324, 28: 324, 324, 324, 40: 324, 45: 324, 97: 324, 103: 324, 324, 324, 324, 324, 324, 324, 324, 133: 324},
		{323, 323, 323, 7: 323, 323, 12: 323, 323, 15: 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 28: 323, 323, 323, 40: 323, 45: 323, 97: 323, 103: 323, 323, 323, 323, 323, 323, 323, 323, 133: 323},
		{322, 322, 322, 7: 322, 322, 12: 322, 322, 15: 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 28: 322, 322, 322, 40: 322, 45: 322, 97: 322, 103: 322, 322, 322, 322, 322, 322, 322, 322, 133: 322},
		// 245
		{219, 219, 219, 12: 953, 952, 16: 942, 937, 940, 938, 941, 936, 961, 947, 28: 956, 957, 935, 45: 946, 97: 949, 103: 219, 219, 219, 958, 960, 950, 959, 951, 133: 219, 234: 933, 939, 240: 945, 934, 311: 1019, 948, 327: 955, 954},
		{218, 218, 218, 12: 218, 218, 16: 218, 218, 218, 218, 218, 218, 218, 218, 28: 218, 218, 218, 45: 218, 97: 218, 103: 218, 218, 218, 218, 218, 218, 218, 218, 133: 218},
		{215, 215, 215, 12: 215, 215, 16: 215, 215, 215, 215, 215, 215, 215, 215, 28: 215, 215, 215, 45: 215, 97: 215, 103: 215, 215, 215, 215, 215, 215, 215, 215, 133: 215},
		{214, 214, 214, 12: 214, 214, 16: 214, 214, 214, 214, 214, 214, 214, 214, 28: 214, 214, 214, 45: 214, 97: 214, 103: 214, 214, 214, 214, 214, 214, 214, 214, 133: 214},
		{27: 1018, 46: 715, 48: 714, 122: 1017},
		// 250
		{211, 211, 211, 12: 211, 211, 16: 211, 211, 211, 211, 211, 211, 211, 211, 28: 211, 211, 211, 45: 211, 97: 211, 103: 211, 211, 211, 211, 211, 211, 211, 211, 133: 211},
		{210, 210, 210, 12: 210, 210, 16: 210, 210, 210, 210, 210, 210, 210, 210, 28: 210, 210, 210, 45: 210, 97: 210, 103: 210, 210, 210, 210, 210, 210, 210, 210, 133: 210},
		{209, 209, 209, 12: 209, 209, 16: 209, 209, 209, 209, 209, 209, 209, 209, 28: 209, 209, 209, 45: 209, 97: 209, 103: 209, 209, 209, 209, 209, 209, 209, 209, 133: 209},
		{208, 208, 208, 12: 208, 208, 16: 208, 208, 208, 208, 208, 208, 208, 208, 28: 208, 208, 208, 45: 208, 97: 208, 103: 208, 208, 208, 208, 208, 208, 208, 208, 133: 208},
		{207, 207, 207, 12: 207, 207, 16: 207, 207, 207, 207, 207, 207, 207, 207, 28: 207, 207, 207, 45: 207, 97: 207, 103: 207, 207, 207, 207, 207, 207, 207, 207, 133: 207},
		// 255
		{206, 206, 206, 12: 206, 206, 16: 206, 206, 206, 206, 206, 206, 206, 206, 28: 206, 206, 206, 45: 206, 97: 206, 103: 206, 206, 206, 206, 206, 206, 206, 206, 133: 206},
		{205, 205, 205, 12: 205, 205, 16: 205, 205, 205, 205, 205, 205, 205, 205, 28: 205, 205, 205, 45: 205, 97: 205, 103: 205, 205, 205, 205, 205, 205, 205, 205, 133: 205},
		{204, 204, 204, 12: 204, 204, 16: 204, 204, 204, 204, 204, 204, 204, 204, 28: 204, 204, 204, 45: 204, 97: 204, 103: 204, 204, 204, 204, 204, 204, 204, 204, 133: 204},
		{203, 203, 203, 12: 203, 203, 16: 203, 203, 203, 203, 203, 203, 203, 203, 28: 203, 203, 203, 45: 203, 97: 203, 103: 203, 203, 203, 203, 203, 203, 203, 203, 133: 203, 1013, 149: 1014},
		{198, 198, 198, 12: 198, 198, 16: 198, 198, 198, 198, 198, 198, 198, 198, 28: 198, 198, 198, 45: 198, 97: 198, 103: 198, 198, 198, 198, 198, 198, 198, 198, 133: 198},
		// 260
		{194: 1012, 206: 1011},
		{195, 195, 195, 12: 195, 195, 16: 195, 195, 195, 195, 195, 195, 195, 195, 28: 195, 195, 195, 45: 195, 97: 195, 103: 195, 195, 195, 195, 195, 195, 195, 195, 133: 195, 1010},
		{193, 193, 193, 12: 193, 193, 16: 193, 193, 193, 193, 193, 193, 193, 193, 28: 193, 193, 193, 45: 193, 97: 193, 103: 193, 193, 193, 193, 193, 193, 193, 193, 133: 193},
		{37: 962},
		{96: 977, 111: 974, 976, 975, 972, 971, 969, 967, 966, 970, 219: 965, 968, 973, 332: 964, 415: 963},
		// 265
		{1008, 96: 977, 111: 974, 976, 975, 972, 971, 969, 967, 966, 970, 219: 965, 968, 973, 332: 1009},
		{45, 96: 45, 111: 45, 45, 45, 45, 45, 45, 45, 45, 45, 219: 45, 45, 45},
		{134: 989, 265: 1007},
		{134: 989, 265: 1006},
		{134: 1005},
		// 270
		{134: 1003, 175: 1004},
		{134: 989, 175: 1001, 265: 1002},
		{134: 1000},
		{134: 999},
		{197: 997},
		// 275
		{33, 11: 988, 96: 33, 111: 33, 33, 33, 33, 33, 33, 33, 33, 33, 134: 989, 219: 33, 33, 33, 265: 987},
		{27: 986, 135: 984, 210: 985},
		{27: 983, 135: 981, 143: 982},
		{27: 980, 135: 978, 143: 979},
		{21, 96: 21, 111: 21, 21, 21, 21, 21, 21, 21, 21, 21, 219: 21, 21, 21},
		// 280
		{24, 96: 24, 111: 24, 24, 24, 24, 24, 24, 24, 24, 24, 219: 24, 24, 24},
		{23, 96: 23, 111: 23, 23, 23, 23, 23, 23, 23, 23, 23, 219: 23, 23, 23},
		{22, 96: 22, 111: 22, 22, 22, 22, 22, 22, 22, 22, 22, 219: 22, 22, 22},
		{27, 96: 27, 111: 27, 27, 27, 27, 27, 27, 27, 27, 27, 219: 27, 27, 27},
		{26, 96: 26, 111: 26, 26, 26, 26, 26, 26, 26, 26, 26, 219: 26, 26, 26},
		// 285
		{25, 96: 25, 111: 25, 25, 25, 25, 25, 25, 25, 25, 25, 219: 25, 25, 25},
		{30, 96: 30, 111: 30, 30, 30, 30, 30, 30, 30, 30, 30, 219: 30, 30, 30},
		{29, 96: 29, 111: 29, 29, 29, 29, 29, 29, 29, 29, 29, 219: 29, 29, 29},
		{28, 96: 28, 111: 28, 28, 28, 28, 28, 28, 28, 28, 28, 219: 28, 28, 28},
		{32, 96: 32, 111: 32, 32, 32, 32, 32, 32, 32, 32, 32, 219: 32, 32, 32},
		// 290
		{31, 96: 31, 111: 31, 31, 31, 31, 31, 31, 31, 31, 31, 219: 31, 31, 31},
		{19, 96: 19, 111: 19, 19, 19, 19, 19, 19, 19, 19, 19, 191: 996, 195: 993, 200: 991, 202: 992, 205: 995, 214: 994, 219: 19, 19, 19, 411: 990},
		{20, 96: 20, 111: 20, 20, 20, 20, 20, 20, 20, 20, 20, 219: 20, 20, 20},
		{18, 96: 18, 111: 18, 18, 18, 18, 18, 18, 18, 18, 18, 219: 18, 18, 18},
		{17, 96: 17, 111: 17, 17, 17, 17, 17, 17, 17, 17, 17, 219: 17, 17, 17},
		// 295
		{16, 96: 16, 111: 16, 16, 16, 16, 16, 16, 16, 16, 16, 219: 16, 16, 16},
		{15, 96: 15, 111: 15, 15, 15, 15, 15, 15, 15, 15, 15, 219: 15, 15, 15},
		{14, 96: 14, 111: 14, 14, 14, 14, 14, 14, 14, 14, 14, 219: 14, 14, 14},
		{13, 96: 13, 111: 13, 13, 13, 13, 13, 13, 13, 13, 13, 219: 13, 13, 13},
		{134: 998},
		// 300
		{34, 96: 34, 111: 34, 34, 34, 34, 34, 34, 34, 34, 34, 219: 34, 34, 34},
		{35, 96: 35, 111: 35, 35, 35, 35, 35, 35, 35, 35, 35, 219: 35, 35, 35},
		{36, 96: 36, 111: 36, 36, 36, 36, 36, 36, 36, 36, 36, 219: 36, 36, 36},
		{38, 96: 38, 111: 38, 38, 38, 38, 38, 38, 38, 38, 38, 219: 38, 38, 38},
		{37, 96: 37, 111: 37, 37, 37, 37, 37, 37, 37, 37, 37, 219: 37, 37, 37},
		// 305
		{40, 96: 40, 111: 40, 40, 40, 40, 40, 40, 40, 40, 40, 219: 40, 40, 40},
		{39, 96: 39, 111: 39, 39, 39, 39, 39, 39, 39, 39, 39, 219: 39, 39, 39},
		{41, 96: 41, 111: 41, 41, 41, 41, 41, 41, 41, 41, 41, 219: 41, 41, 41},
		{42, 96: 42, 111: 42, 42, 42, 42, 42, 42, 42, 42, 42, 219: 42, 42, 42},
		{43, 96: 43, 111: 43, 43, 43, 43, 43, 43, 43, 43, 43, 219: 43, 43, 43},
		// 310
		{46, 46, 46, 7: 46, 46, 12: 46, 46, 15: 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 28: 46, 46, 46, 40: 46, 45: 46, 97: 46, 103: 46, 46, 46, 46, 46, 46, 46, 46, 133: 46},
		{44, 96: 44, 111: 44, 44, 44, 44, 44, 44, 44, 44, 44, 219: 44, 44, 44},
		{194, 194, 194, 12: 194, 194, 16: 194, 194, 194, 194, 194, 194, 194, 194, 28: 194, 194, 194, 45: 194, 97: 194, 103: 194, 194, 194, 194, 194, 194, 194, 194, 133: 194},
		{197, 197, 197, 12: 197, 197, 16: 197, 197, 197, 197, 197, 197, 197, 197, 28: 197, 197, 197, 45: 197, 97: 197, 103: 197, 197, 197, 197, 197, 197, 197, 197, 133: 197},
		{196, 196, 196, 12: 196, 196, 16: 196, 196, 196, 196, 196, 196, 196, 196, 28: 196, 196, 196, 45: 196, 97: 196, 103: 196, 196, 196, 196, 196, 196, 196, 196, 133: 196},
		// 315
		{202, 202, 202, 12: 202, 202, 16: 202, 202, 202, 202, 202, 202, 202, 202, 28: 202, 202, 202, 45: 202, 97: 202, 103: 202, 202, 202, 202, 202, 202, 202, 202, 133: 202},
		{201, 201, 201, 12: 201, 201, 16: 201, 201, 201, 201, 201, 201, 201, 201, 28: 201, 201, 201, 45: 201, 97: 201, 103: 201, 201, 201, 201, 201, 201, 201, 201, 133: 201, 139: 1016, 1015},
		{200, 200, 200, 12: 200, 200, 16: 200, 200, 200, 200, 200, 200, 200, 200, 28: 200, 200, 200, 45: 200, 97: 200, 103: 200, 200, 200, 200, 200, 200, 200, 200, 133: 200},
		{199, 199, 199, 12: 199, 199, 16: 199, 199, 199, 199, 199, 199, 199, 199, 28: 199, 199, 199, 45: 199, 97: 199, 103: 199, 199, 199, 199, 199, 199, 199, 199, 133: 199},
		{213, 213, 213, 12: 213, 213, 16: 213, 213, 213, 213, 213, 213, 213, 213, 28: 213, 213, 213, 45: 213, 97: 213, 103: 213, 213, 213, 213, 213, 213, 213, 213, 133: 213},
		// 320
		{212, 212, 212, 12: 212, 212, 16: 212, 212, 212, 212, 212, 212, 212, 212, 28: 212, 212, 212, 45: 212, 97: 212, 103: 212, 212, 212, 212, 212, 212, 212, 212, 133: 212},
		{217, 217, 217, 12: 217, 217, 16: 217, 217, 217, 217, 217, 217, 217, 217, 28: 217, 217, 217, 45: 217, 97: 217, 103: 217, 217, 217, 217, 217, 217, 217, 217, 133: 217},
		{326, 326, 326, 7: 326, 326, 12: 326, 326, 15: 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 326, 28: 326, 326, 326, 40: 326, 45: 326, 97: 326, 103: 326, 326, 326, 326, 326, 326, 326, 326, 133: 326},
		{327, 327, 327, 7: 327, 327, 12: 327, 327, 15: 327, 327, 327, 327, 327, 327, 327, 327, 327, 327, 327, 327, 28: 327, 327, 327, 40: 327, 45: 327, 97: 327, 103: 327, 327, 327, 327, 327, 327, 327, 327, 133: 327},
		{328, 328, 328, 7: 328, 328, 12: 328, 328, 15: 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 328, 28: 328, 328, 328, 40: 328, 45: 328, 97: 328, 103: 328, 328, 328, 328, 328, 328, 328, 328, 133: 328},
		// 325
		{329, 329, 329, 7: 329, 329, 12: 329, 329, 15: 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 329, 28: 329, 329, 329, 40: 329, 45: 329, 97: 329, 103: 329, 329, 329, 329, 329, 329, 329, 329, 133: 329},
		{330, 330, 330, 7: 330, 330, 12: 330, 330, 15: 330, 330, 330, 330, 330, 330, 330, 330, 330, 330, 330, 330, 28: 330, 330, 330, 40: 330, 45: 330, 97: 330, 103: 330, 330, 330, 330, 330, 330, 330, 330, 133: 330},
		{46: 715, 48: 714, 122: 1026},
		{12: 682, 682, 16: 682, 682, 682, 682, 682, 682, 682, 682, 28: 682, 682, 682, 45: 682, 97: 682, 106: 682, 682, 682, 682, 682},
		{178, 178, 178, 103: 1031, 133: 1032, 357: 1030},
		// 330
		{180, 180, 180, 103: 180, 133: 180},
		{179, 179, 179, 103: 179, 133: 179},
		{228, 228, 228},
		{160: 1034},
		{160: 1033},
		// 335
		{176, 176, 176},
		{177, 177, 177},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 1036, 713},
		{76: 680},
		{227: 369},
		// 340
		{227: 374},
		{227: 375},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 711, 713, 237: 1041},
		{1: 368, 368, 7: 368, 368, 16: 368, 368, 368, 368, 368, 368, 368, 368, 26: 368, 368, 368, 368, 368, 37: 368, 40: 368, 42: 368, 44: 368, 47: 368, 74: 1043, 76: 368, 368, 410: 1042},
		{1: 234, 234, 7: 234, 234, 16: 234, 234, 234, 234, 234, 234, 234, 234, 26: 234, 234, 234, 234, 234, 37: 1053, 40: 234, 42: 234, 44: 234, 47: 234, 76: 234, 234, 405: 1051, 407: 1052, 417: 1050},
		// 345
		{334: 1044},
		{143: 1048, 157: 1046, 193: 1047, 204: 1045},
		{1: 367, 367, 7: 367, 367, 16: 367, 367, 367, 367, 367, 367, 367, 367, 26: 367, 367, 367, 367, 367, 37: 367, 40: 367, 42: 367, 44: 367, 47: 367, 76: 367, 367},
		{1: 366, 366, 7: 366, 366, 16: 366, 366, 366, 366, 366, 366, 366, 366, 26: 366, 366, 366, 366, 366, 37: 366, 40: 366, 42: 366, 44: 366, 47: 366, 76: 366, 366},
		{157: 1049},
		// 350
		{1: 364, 364, 7: 364, 364, 16: 364, 364, 364, 364, 364, 364, 364, 364, 26: 364, 364, 364, 364, 364, 37: 364, 40: 364, 42: 364, 44: 364, 47: 364, 76: 364, 364},
		{1: 365, 365, 7: 365, 365, 16: 365, 365, 365, 365, 365, 365, 365, 365, 26: 365, 365, 365, 365, 365, 37: 365, 40: 365, 42: 365, 44: 365, 47: 365, 76: 365, 365},
		{1: 6, 6, 7: 1594, 6, 320: 1593, 389: 1592},
		{1: 361, 361, 7: 361, 361},
		{1: 359, 359, 7: 359, 359, 16: 359, 359, 359, 359, 359, 359, 359, 359, 26: 359, 359, 359, 359, 359, 40: 359, 42: 359, 44: 359, 47: 359, 76: 359, 359, 372: 1412},
		// 355
		{4: 1056, 1054, 854, 809, 836, 1065, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 1055, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1058, 238: 1063, 254: 1061, 263: 1064, 1057, 286: 1062, 329: 1060, 406: 1059},
		{46: 715, 48: 714, 54: 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 79: 648, 648, 648, 648, 648, 648, 648, 648, 648, 648, 90: 648, 648, 648, 122: 1407},
		{54: 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 79: 617, 617, 617, 617, 617, 617, 617, 617, 617, 617, 90: 617, 617, 617, 138: 1113},
		{54: 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 79: 544, 544, 544, 544, 544, 544, 544, 544, 544, 544, 90: 544, 544, 544, 138: 1131},
		{487, 3: 487},
		// 360
		{54: 1168, 1165, 1156, 1155, 1162, 1163, 1173, 1177, 1175, 1161, 1170, 1151, 1164, 1171, 1152, 1178, 1160, 1167, 79: 1149, 1166, 1158, 1159, 1172, 1154, 1174, 1157, 1153, 1176, 90: 1169, 1150, 1179, 269: 1141, 1143, 274: 1139, 1146, 281: 1147, 1145, 1144, 1142, 1140, 287: 1148},
		{1136, 3: 1137},
		{232, 3: 232},
		{230, 3: 230},
		{229, 3: 229},
		// 365
		{4: 1111, 9: 1065, 141: 1112, 263: 1110},
		{50, 50, 50, 50},
		{37: 1066},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1068},
		{686, 3: 686},
		// 370
		{1070, 3: 1069},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1109},
		{82, 82, 82, 82, 10: 1076, 32: 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1071, 1072, 239: 1078},
		{81, 81, 81, 81, 81, 81, 81, 9: 81, 81, 81},
		{70, 70, 70, 70, 70, 70, 70, 9: 70, 70, 70, 31: 70, 70, 70, 70, 70, 70, 38: 1086, 1085, 72: 70, 355: 1084},
		// 375
		{78, 78, 78, 78, 78, 78, 78, 9: 78, 78, 78, 31: 78, 78, 78, 78, 78, 78, 38: 78, 78, 43: 1077, 72: 78, 230: 1083},
		{76, 76, 76, 76, 76, 76, 76, 9: 76, 1076, 76, 31: 76, 76, 76, 76, 76, 76, 38: 76, 76, 41: 1075, 72: 76, 229: 1082},
		{74, 74, 74, 74, 74, 74, 74, 9: 74, 74, 74, 31: 74, 74, 74, 74, 74, 74, 38: 74, 74, 43: 74, 72: 74},
		{41: 1081},
		{103: 1079, 133: 1080},
		// 380
		{49, 49, 49, 49},
		{72, 72, 72, 72, 72, 72, 72, 9: 72, 72, 72, 31: 72, 72, 72, 72, 72, 72, 38: 72, 72, 41: 72, 72: 72},
		{71, 71, 71, 71, 71, 71, 71, 9: 71, 71, 71, 31: 71, 71, 71, 71, 71, 71, 38: 71, 71, 41: 71, 72: 71},
		{73, 73, 73, 73, 73, 73, 73, 9: 73, 73, 73, 31: 73, 73, 73, 73, 73, 73, 38: 73, 73, 43: 73, 72: 73},
		{75, 75, 75, 75, 75, 75, 75, 9: 75, 75, 75, 31: 75, 75, 75, 75, 75, 75, 38: 75, 75, 72: 75},
		// 385
		{77, 77, 77, 77, 77, 77, 77, 9: 77, 77, 77, 31: 77, 77, 77, 77, 77, 77, 38: 77, 77, 72: 77},
		{67, 67, 67, 67, 67, 67, 67, 9: 67, 67, 67, 31: 67, 67, 67, 67, 67, 1088, 72: 67, 421: 1087},
		{69, 69, 69, 69, 69, 69, 69, 9: 69, 69, 69, 31: 69, 69, 69, 69, 69, 69, 72: 69},
		{68, 68, 68, 68, 68, 68, 68, 9: 68, 68, 68, 31: 68, 68, 68, 68, 68, 68, 72: 68},
		{63, 63, 63, 63, 63, 63, 63, 9: 63, 63, 63, 31: 63, 63, 63, 1101, 1100, 72: 63, 354: 1099},
		// 390
		{233: 1089},
		{183, 183, 183, 183, 183, 183, 183, 9: 183, 183, 183, 31: 183, 183, 183, 183, 183, 37: 1092, 46: 715, 48: 714, 72: 183, 122: 1090, 314: 1093, 422: 1091},
		{679, 679, 679, 679, 679, 679, 679, 9: 679, 679, 679, 31: 679, 679, 679, 679, 679, 72: 679, 93: 1097},
		{66, 66, 66, 66, 66, 66, 66, 9: 66, 66, 66, 31: 66, 66, 66, 66, 66, 72: 66},
		{266: 1094, 273: 1095},
		// 395
		{64, 64, 64, 64, 64, 64, 64, 9: 64, 64, 64, 31: 64, 64, 64, 64, 64, 72: 64},
		{9: 903, 152: 904, 165: 905, 233: 227, 315: 902},
		{1096},
		{65, 65, 65, 65, 65, 65, 65, 9: 65, 65, 65, 31: 65, 65, 65, 65, 65, 72: 65},
		{46: 715, 48: 714, 122: 1098},
		// 400
		{678, 678, 678, 678, 678, 678, 678, 9: 678, 678, 678, 31: 678, 678, 678, 678, 678, 72: 678},
		{60, 60, 60, 60, 60, 60, 60, 9: 60, 60, 60, 31: 60, 60, 1104, 72: 1103, 356: 1102},
		{62, 62, 62, 62, 62, 62, 62, 9: 62, 62, 62, 31: 62, 62, 62, 72: 62},
		{61, 61, 61, 61, 61, 61, 61, 9: 61, 61, 61, 31: 61, 61, 61, 72: 61},
		{57, 57, 57, 57, 57, 57, 57, 9: 57, 57, 57, 31: 57, 1106, 367: 1105},
		// 405
		{59, 59, 59, 59, 59, 59, 59, 9: 59, 59, 59, 31: 59, 59},
		{58, 58, 58, 58, 58, 58, 58, 9: 58, 58, 58, 31: 58, 58},
		{80, 80, 80, 80, 80, 80, 80, 9: 80, 80, 80, 31: 80},
		{335: 1107},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 711, 713, 237: 1108},
		// 410
		{56, 56, 56, 56, 56, 56, 56, 9: 56, 56, 56, 31: 56},
		{685, 3: 685},
		{51, 51, 51, 51},
		{138: 1131},
		{138: 1113},
		// 415
		{37: 1114},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1115},
		{1116, 3: 1069},
		{6: 1117, 242: 1118},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 711, 713, 237: 1120},
		// 420
		{82, 82, 82, 82, 10: 1076, 32: 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1071, 1072, 239: 1119},
		{47, 47, 47, 47},
		{87, 87, 87, 87, 87, 87, 87, 9: 87, 87, 87, 32: 87, 87, 87, 87, 87, 1122, 87, 87, 41: 87, 43: 87, 72: 87, 76: 87, 350: 1121},
		{85, 85, 85, 85, 85, 85, 85, 9: 85, 85, 85, 32: 85, 85, 85, 85, 85, 38: 85, 85, 41: 85, 43: 85, 72: 85, 76: 1126, 404: 1125},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1123},
		// 425
		{1124, 3: 1069},
		{86, 86, 86, 86, 86, 86, 86, 9: 86, 86, 86, 32: 86, 86, 86, 86, 86, 38: 86, 86, 41: 86, 43: 86, 72: 86, 76: 86},
		{88, 88, 88, 88, 88, 88, 88, 9: 88, 88, 88, 32: 88, 88, 88, 88, 88, 38: 88, 88, 41: 88, 43: 88, 72: 88},
		{267: 1127},
		{31: 1128, 49: 1129},
		// 430
		{84, 84, 84, 84, 84, 84, 84, 9: 84, 84, 84, 32: 84, 84, 84, 84, 84, 38: 84, 84, 41: 84, 43: 84, 72: 84},
		{11: 1130},
		{83, 83, 83, 83, 83, 83, 83, 9: 83, 83, 83, 32: 83, 83, 83, 83, 83, 38: 83, 83, 41: 83, 43: 83, 72: 83},
		{37: 1132},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1133},
		// 435
		{1134, 3: 1069},
		{82, 82, 82, 82, 10: 1076, 32: 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1071, 1072, 239: 1135},
		{48, 48, 48, 48},
		{1: 233, 233, 7: 233, 233, 16: 233, 233, 233, 233, 233, 233, 233, 233, 26: 233, 233, 233, 233, 233, 40: 233, 42: 233, 44: 233, 47: 233, 76: 233, 233},
		{4: 1056, 1054, 854, 809, 836, 1065, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 1055, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1058, 238: 1063, 254: 1061, 263: 1064, 1057, 286: 1062, 329: 1138},
		// 440
		{231, 3: 231},
		{485, 3: 485, 485, 485, 485, 9: 485, 485, 485, 485, 485, 27: 485, 96: 485, 485, 485, 100: 485, 485, 1304, 271: 1303, 295: 1302},
		{170, 3: 170, 170, 170, 170, 9: 170, 170, 170, 170, 170, 170, 27: 170, 96: 170, 170, 170, 170, 170, 170, 170},
		{169, 3: 169, 169, 169, 169, 9: 169, 169, 169, 169, 169, 169, 27: 169, 96: 169, 169, 169, 169, 169, 169, 169},
		{168, 3: 168, 168, 168, 168, 9: 168, 168, 168, 168, 168, 168, 27: 168, 96: 168, 168, 168, 168, 168, 168, 168},
		// 445
		{165, 3: 165, 165, 165, 165, 9: 165, 165, 165, 165, 165, 165, 27: 165, 96: 165, 165, 165, 165, 165, 165, 165},
		{164, 3: 164, 164, 164, 164, 9: 164, 164, 164, 164, 164, 164, 27: 164, 96: 164, 164, 164, 164, 164, 164, 164},
		{163, 3: 163, 163, 163, 163, 9: 163, 163, 163, 163, 163, 163, 27: 163, 96: 163, 163, 163, 163, 163, 163, 163},
		{162, 3: 162, 162, 162, 162, 9: 162, 162, 162, 162, 162, 162, 27: 162, 96: 162, 162, 162, 162, 162, 162, 162},
		{161, 3: 161, 161, 161, 161, 9: 161, 161, 161, 161, 161, 161, 27: 161, 96: 161, 161, 161, 161, 161, 161, 161},
		// 450
		{160, 3: 160, 160, 160, 160, 9: 160, 160, 160, 160, 160, 160, 27: 160, 96: 160, 160, 160, 160, 160, 160, 160},
		{159, 3: 159, 159, 159, 159, 9: 159, 159, 159, 159, 159, 159, 27: 159, 37: 1291, 96: 159, 159, 159, 159, 159, 159, 159, 144: 1292},
		{37: 1284},
		{152, 3: 152, 152, 152, 152, 9: 152, 152, 152, 152, 152, 152, 27: 152, 37: 1277, 96: 152, 152, 152, 152, 152, 152, 152, 144: 1278},
		{37: 1274},
		// 455
		{149, 3: 149, 149, 149, 149, 9: 149, 149, 149, 149, 149, 149, 27: 149, 37: 1268, 96: 149, 149, 149, 149, 149, 149, 149},
		{146, 3: 146, 146, 146, 146, 9: 146, 146, 146, 146, 146, 146, 27: 146, 37: 1265, 96: 146, 146, 146, 146, 146, 146, 146},
		{144, 3: 144, 144, 144, 144, 9: 144, 144, 144, 144, 144, 144, 27: 144, 96: 144, 144, 144, 144, 144, 144, 144},
		{143, 3: 143, 143, 143, 143, 9: 143, 143, 143, 143, 143, 143, 27: 143, 96: 143, 143, 143, 143, 143, 143, 143},
		{142, 3: 142, 142, 142, 142, 9: 142, 142, 142, 142, 142, 142, 27: 142, 81: 1264, 96: 142, 142, 142, 142, 142, 142, 142},
		// 460
		{37: 1261},
		{139, 3: 139, 139, 139, 139, 9: 139, 139, 139, 139, 139, 139, 27: 139, 96: 139, 139, 139, 139, 139, 139, 139},
		{138, 3: 138, 138, 138, 138, 9: 138, 138, 138, 138, 138, 138, 27: 138, 37: 1252, 96: 138, 138, 138, 138, 138, 138, 138},
		{186: 1231, 216: 1230},
		{128, 3: 128, 128, 128, 128, 9: 128, 128, 128, 128, 128, 128, 27: 128, 96: 128, 128, 128, 128, 128, 128, 128},
		// 465
		{127, 3: 127, 127, 127, 127, 9: 127, 127, 127, 127, 127, 127, 27: 127, 96: 127, 127, 127, 127, 127, 127, 127},
		{126, 3: 126, 126, 126, 126, 9: 126, 126, 126, 126, 126, 126, 27: 126, 96: 126, 126, 126, 126, 126, 126, 126},
		{125, 3: 125, 125, 125, 125, 9: 125, 125, 125, 125, 125, 125, 27: 125, 96: 125, 125, 125, 125, 125, 125, 125},
		{124, 3: 124, 124, 124, 124, 9: 124, 124, 124, 124, 124, 124, 27: 124, 96: 124, 124, 124, 124, 124, 124, 124},
		{123, 3: 123, 123, 123, 123, 9: 123, 123, 123, 123, 123, 123, 27: 123, 37: 1227, 96: 123, 123, 123, 123, 123, 123, 123},
		// 470
		{37: 1220, 144: 1221},
		{37: 1217},
		{54: 1201, 79: 1202},
		{112, 3: 112, 112, 112, 112, 9: 112, 112, 112, 112, 112, 112, 27: 112, 37: 1195, 96: 112, 112, 112, 112, 112, 112, 112},
		{109, 3: 109, 109, 109, 109, 9: 109, 109, 109, 109, 109, 109, 27: 109, 37: 1189, 96: 109, 109, 109, 109, 109, 109, 109},
		// 475
		{106, 3: 106, 106, 106, 106, 9: 106, 106, 106, 106, 106, 106, 27: 106, 37: 1181, 96: 106, 106, 106, 106, 106, 106, 106},
		{103, 3: 103, 103, 103, 103, 9: 103, 103, 103, 103, 103, 103, 27: 103, 96: 103, 103, 103, 103, 103, 103, 103},
		{102, 3: 102, 102, 102, 102, 9: 102, 102, 102, 102, 102, 102, 27: 102, 96: 102, 102, 102, 102, 102, 102, 102},
		{101, 3: 101, 101, 101, 101, 9: 101, 101, 101, 101, 101, 101, 27: 101, 96: 101, 101, 101, 101, 101, 101, 101},
		{207: 1180},
		// 480
		{99, 3: 99, 99, 99, 99, 9: 99, 99, 99, 99, 99, 99, 27: 99, 96: 99, 99, 99, 99, 99, 99, 99},
		{98, 3: 98, 98, 98, 98, 9: 98, 98, 98, 98, 98, 98, 27: 98, 96: 98, 98, 98, 98, 98, 98, 98},
		{100, 3: 100, 100, 100, 100, 9: 100, 100, 100, 100, 100, 100, 27: 100, 96: 100, 100, 100, 100, 100, 100, 100},
		{134: 1182, 247: 1183, 249: 1184},
		{167, 3: 167},
		// 485
		{166, 3: 166},
		{1185, 3: 1186},
		{105, 3: 105, 105, 105, 105, 9: 105, 105, 105, 105, 105, 105, 27: 105, 96: 105, 105, 105, 105, 105, 105, 105},
		{134: 1187},
		{1188},
		// 490
		{104, 3: 104, 104, 104, 104, 9: 104, 104, 104, 104, 104, 104, 27: 104, 96: 104, 104, 104, 104, 104, 104, 104},
		{134: 1182, 247: 1183, 249: 1190},
		{1191, 3: 1192},
		{108, 3: 108, 108, 108, 108, 9: 108, 108, 108, 108, 108, 108, 27: 108, 96: 108, 108, 108, 108, 108, 108, 108},
		{134: 1193},
		// 495
		{1194},
		{107, 3: 107, 107, 107, 107, 9: 107, 107, 107, 107, 107, 107, 27: 107, 96: 107, 107, 107, 107, 107, 107, 107},
		{134: 1182, 247: 1183, 249: 1196},
		{1197, 3: 1198},
		{111, 3: 111, 111, 111, 111, 9: 111, 111, 111, 111, 111, 111, 27: 111, 96: 111, 111, 111, 111, 111, 111, 111},
		// 500
		{134: 1199},
		{1200},
		{110, 3: 110, 110, 110, 110, 9: 110, 110, 110, 110, 110, 110, 27: 110, 96: 110, 110, 110, 110, 110, 110, 110},
		{37: 1210, 144: 1211},
		{37: 1203, 144: 1204},
		// 505
		{134: 1208},
		{37: 1205},
		{134: 1206},
		{1207},
		{113, 3: 113, 113, 113, 113, 9: 113, 113, 113, 113, 113, 113, 27: 113, 96: 113, 113, 113, 113, 113, 113, 113},
		// 510
		{1209},
		{114, 3: 114, 114, 114, 114, 9: 114, 114, 114, 114, 114, 114, 27: 114, 96: 114, 114, 114, 114, 114, 114, 114},
		{134: 1215},
		{37: 1212},
		{134: 1213},
		// 515
		{1214},
		{115, 3: 115, 115, 115, 115, 9: 115, 115, 115, 115, 115, 115, 27: 115, 96: 115, 115, 115, 115, 115, 115, 115},
		{1216},
		{116, 3: 116, 116, 116, 116, 9: 116, 116, 116, 116, 116, 116, 27: 116, 96: 116, 116, 116, 116, 116, 116, 116},
		{134: 1218},
		// 520
		{1219},
		{117, 3: 117, 117, 117, 117, 9: 117, 117, 117, 117, 117, 117, 27: 117, 96: 117, 117, 117, 117, 117, 117, 117},
		{134: 1225},
		{37: 1222},
		{134: 1223},
		// 525
		{1224},
		{120, 3: 120, 120, 120, 120, 9: 120, 120, 120, 120, 120, 120, 27: 120, 96: 120, 120, 120, 120, 120, 120, 120},
		{1226},
		{121, 3: 121, 121, 121, 121, 9: 121, 121, 121, 121, 121, 121, 27: 121, 96: 121, 121, 121, 121, 121, 121, 121},
		{134: 1228},
		// 530
		{1229},
		{122, 3: 122, 122, 122, 122, 9: 122, 122, 122, 122, 122, 122, 27: 122, 96: 122, 122, 122, 122, 122, 122, 122},
		{37: 1246, 89: 1245},
		{37: 1233, 89: 1232},
		{171: 1241},
		// 535
		{134: 1234},
		{1235},
		{89: 1236},
		{171: 1237},
		{131, 3: 131, 131, 131, 131, 9: 131, 131, 131, 131, 131, 131, 27: 131, 37: 1238, 96: 131, 131, 131, 131, 131, 131, 131},
		// 540
		{134: 1239},
		{1240},
		{130, 3: 130, 130, 130, 130, 9: 130, 130, 130, 130, 130, 130, 27: 130, 96: 130, 130, 130, 130, 130, 130, 130},
		{132, 3: 132, 132, 132, 132, 9: 132, 132, 132, 132, 132, 132, 27: 132, 37: 1242, 96: 132, 132, 132, 132, 132, 132, 132},
		{134: 1243},
		// 545
		{1244},
		{129, 3: 129, 129, 129, 129, 9: 129, 129, 129, 129, 129, 129, 27: 129, 96: 129, 129, 129, 129, 129, 129, 129},
		{164: 1251},
		{134: 1247},
		{1248},
		// 550
		{89: 1249},
		{164: 1250},
		{133, 3: 133, 133, 133, 133, 9: 133, 133, 133, 133, 133, 133, 27: 133, 96: 133, 133, 133, 133, 133, 133, 133},
		{134, 3: 134, 134, 134, 134, 9: 134, 134, 134, 134, 134, 134, 27: 134, 96: 134, 134, 134, 134, 134, 134, 134},
		{134: 1253},
		// 555
		{1254},
		{137, 3: 137, 137, 137, 137, 9: 137, 137, 137, 137, 137, 137, 27: 137, 96: 137, 137, 137, 137, 137, 1255, 137},
		{174: 1256, 201: 1257},
		{177: 1260},
		{174: 1258},
		// 560
		{177: 1259},
		{135, 3: 135, 135, 135, 135, 9: 135, 135, 135, 135, 135, 135, 27: 135, 96: 135, 135, 135, 135, 135, 135, 135},
		{136, 3: 136, 136, 136, 136, 9: 136, 136, 136, 136, 136, 136, 27: 136, 96: 136, 136, 136, 136, 136, 136, 136},
		{134: 1262},
		{1263},
		// 565
		{140, 3: 140, 140, 140, 140, 9: 140, 140, 140, 140, 140, 140, 27: 140, 96: 140, 140, 140, 140, 140, 140, 140},
		{141, 3: 141, 141, 141, 141, 9: 141, 141, 141, 141, 141, 141, 27: 141, 96: 141, 141, 141, 141, 141, 141, 141},
		{134: 1182, 247: 1183, 249: 1266},
		{1267},
		{145, 3: 145, 145, 145, 145, 9: 145, 145, 145, 145, 145, 145, 27: 145, 96: 145, 145, 145, 145, 145, 145, 145},
		// 570
		{134: 1182, 247: 1183, 249: 1269},
		{1270, 3: 1271},
		{148, 3: 148, 148, 148, 148, 9: 148, 148, 148, 148, 148, 148, 27: 148, 96: 148, 148, 148, 148, 148, 148, 148},
		{134: 1272},
		{1273},
		// 575
		{147, 3: 147, 147, 147, 147, 9: 147, 147, 147, 147, 147, 147, 27: 147, 96: 147, 147, 147, 147, 147, 147, 147},
		{134: 1275},
		{1276},
		{150, 3: 150, 150, 150, 150, 9: 150, 150, 150, 150, 150, 150, 27: 150, 96: 150, 150, 150, 150, 150, 150, 150},
		{134: 1282},
		// 580
		{37: 1279},
		{134: 1280},
		{1281},
		{118, 3: 118, 118, 118, 118, 9: 118, 118, 118, 118, 118, 118, 27: 118, 96: 118, 118, 118, 118, 118, 118, 118},
		{1283},
		// 585
		{151, 3: 151, 151, 151, 151, 9: 151, 151, 151, 151, 151, 151, 27: 151, 96: 151, 151, 151, 151, 151, 151, 151},
		{134: 1285},
		{1286, 79: 1288, 154: 1287},
		{155, 3: 155, 155, 155, 155, 9: 155, 155, 155, 155, 155, 155, 27: 155, 96: 155, 155, 155, 155, 155, 155, 155},
		{1290},
		// 590
		{1289},
		{153, 3: 153, 153, 153, 153, 9: 153, 153, 153, 153, 153, 153, 27: 153, 96: 153, 153, 153, 153, 153, 153, 153},
		{154, 3: 154, 154, 154, 154, 9: 154, 154, 154, 154, 154, 154, 27: 154, 96: 154, 154, 154, 154, 154, 154, 154},
		{134: 1296},
		{37: 1293},
		// 595
		{134: 1294},
		{1295},
		{119, 3: 119, 119, 119, 119, 9: 119, 119, 119, 119, 119, 119, 27: 119, 96: 119, 119, 119, 119, 119, 119, 119},
		{1297, 79: 1299, 154: 1298},
		{158, 3: 158, 158, 158, 158, 9: 158, 158, 158, 158, 158, 158, 27: 158, 96: 158, 158, 158, 158, 158, 158, 158},
		// 600
		{1301},
		{1300},
		{156, 3: 156, 156, 156, 156, 9: 156, 156, 156, 156, 156, 156, 27: 156, 96: 156, 156, 156, 156, 156, 156, 156},
		{157, 3: 157, 157, 157, 157, 9: 157, 157, 157, 157, 157, 157, 27: 157, 96: 157, 157, 157, 157, 157, 157, 157},
		{482, 3: 482, 482, 482, 482, 9: 482, 482, 482, 482, 482, 27: 482, 96: 482, 1307, 482, 100: 482, 482, 412: 1306},
		// 605
		{484, 3: 484, 484, 484, 484, 9: 484, 484, 484, 484, 484, 484, 27: 484, 96: 484, 484, 484, 484, 484, 484},
		{46: 715, 48: 714, 122: 1305},
		{483, 483, 483, 483, 483, 483, 483, 483, 483, 483, 483, 483, 483, 483, 483, 16: 483, 483, 483, 483, 483, 483, 483, 483, 26: 483, 483, 483, 483, 483, 40: 483, 42: 483, 44: 483, 47: 483, 76: 483, 483, 96: 483, 483, 483, 483, 483, 483},
		{480, 3: 480, 480, 480, 480, 9: 480, 480, 480, 1310, 1311, 27: 480, 96: 480, 98: 480, 100: 480, 480, 279: 1309, 388: 1308},
		{481, 3: 481, 481, 481, 481, 9: 481, 481, 481, 481, 481, 27: 481, 96: 481, 98: 481, 100: 481, 481},
		// 610
		{476, 3: 476, 476, 476, 476, 9: 476, 476, 476, 27: 1315, 96: 476, 98: 476, 100: 1316, 476, 297: 1313, 1312, 308: 1314},
		{479, 3: 479, 479, 479, 479, 9: 479, 479, 479, 27: 479, 96: 479, 98: 479, 100: 479, 479},
		{478, 3: 478, 478, 478, 478, 9: 478, 478, 478, 27: 478, 96: 478, 98: 478, 100: 478, 478},
		{477, 3: 477, 477, 477, 477, 9: 477, 477, 477, 27: 477, 96: 477, 98: 477, 100: 477, 477},
		{449, 3: 449, 449, 449, 449, 9: 449, 449, 449, 96: 1367, 98: 449, 101: 449, 305: 1366},
		// 615
		{475, 3: 475, 475, 475, 475, 9: 475, 475, 475, 96: 475, 98: 475, 475, 101: 475},
		{474, 3: 474, 474, 474, 474, 9: 474, 474, 474, 96: 474, 98: 474, 474, 101: 474},
		{15: 1361, 46: 1363, 134: 1362, 306: 1360},
		{178: 1318, 252: 1317, 1319},
		{142: 1358},
		// 620
		{252: 1355},
		{27: 1320},
		{76: 1322, 252: 1321},
		{142: 1353},
		{11: 1323},
		// 625
		{252: 1324},
		{142: 1325},
		{467, 3: 467, 467, 467, 467, 9: 467, 467, 467, 37: 1327, 96: 467, 98: 467, 467, 101: 467, 255: 1326},
		{468, 3: 468, 468, 468, 468, 9: 468, 468, 468, 96: 468, 98: 468, 468, 101: 468},
		{465, 123: 1338, 1336, 126: 1332, 1334, 1339, 1337, 1333, 1335, 1341, 223: 1331, 1340, 1330, 309: 1329, 371: 1328},
		// 630
		{1351, 123: 1338, 1336, 126: 1332, 1334, 1339, 1337, 1333, 1335, 1341, 223: 1331, 1340, 1330, 309: 1352},
		{464, 123: 464, 464, 126: 464, 464, 464, 464, 464, 464, 464, 223: 464, 464, 464},
		{101: 1347},
		{253: 1345},
		{134: 1344},
		// 635
		{458, 123: 458, 458, 126: 458, 458, 458, 458, 458, 458, 458, 223: 458, 458, 458},
		{134: 1343},
		{456, 123: 456, 456, 126: 456, 456, 456, 456, 456, 456, 456, 223: 456, 456, 456},
		{455, 123: 455, 455, 126: 455, 455, 455, 455, 455, 455, 455, 223: 455, 455, 455},
		{454, 123: 454, 454, 126: 454, 454, 454, 454, 454, 454, 454, 223: 454, 454, 454},
		// 640
		{134: 1342},
		{452, 123: 452, 452, 126: 452, 452, 452, 452, 452, 452, 452, 223: 452, 452, 452},
		{451, 123: 451, 451, 126: 451, 451, 451, 451, 451, 451, 451, 223: 451, 451, 451},
		{450, 123: 450, 450, 126: 450, 450, 450, 450, 450, 450, 450, 223: 450, 450, 450},
		{453, 123: 453, 453, 126: 453, 453, 453, 453, 453, 453, 453, 223: 453, 453, 453},
		// 645
		{457, 123: 457, 457, 126: 457, 457, 457, 457, 457, 457, 457, 223: 457, 457, 457},
		{459, 123: 459, 459, 126: 459, 459, 459, 459, 459, 459, 459, 223: 459, 459, 459},
		{134: 1346},
		{460, 123: 460, 460, 126: 460, 460, 460, 460, 460, 460, 460, 223: 460, 460, 460},
		{134: 1348, 162: 1349},
		// 650
		{462, 123: 462, 462, 126: 462, 462, 462, 462, 462, 462, 462, 223: 462, 462, 462},
		{215: 1350},
		{461, 123: 461, 461, 126: 461, 461, 461, 461, 461, 461, 461, 223: 461, 461, 461},
		{466, 3: 466, 466, 466, 466, 9: 466, 466, 466, 96: 466, 98: 466, 466, 101: 466},
		{463, 123: 463, 463, 126: 463, 463, 463, 463, 463, 463, 463, 223: 463, 463, 463},
		// 655
		{467, 3: 467, 467, 467, 467, 9: 467, 467, 467, 37: 1327, 96: 467, 98: 467, 467, 101: 467, 255: 1354},
		{469, 3: 469, 469, 469, 469, 9: 469, 469, 469, 96: 469, 98: 469, 469, 101: 469},
		{142: 1356},
		{467, 3: 467, 467, 467, 467, 9: 467, 467, 467, 37: 1327, 96: 467, 98: 467, 467, 101: 467, 255: 1357},
		{470, 3: 470, 470, 470, 470, 9: 470, 470, 470, 96: 470, 98: 470, 470, 101: 470},
		// 660
		{467, 3: 467, 467, 467, 467, 9: 467, 467, 467, 37: 1327, 96: 467, 98: 467, 467, 101: 467, 255: 1359},
		{471, 3: 471, 471, 471, 471, 9: 471, 471, 471, 96: 471, 98: 471, 471, 101: 471},
		{473, 3: 473, 473, 473, 473, 9: 473, 473, 473, 96: 473, 98: 473, 473, 101: 473},
		{11: 1364},
		{2, 3: 2, 2, 2, 2, 9: 2, 2, 2, 96: 2, 98: 2, 2, 101: 2},
		// 665
		{1, 3: 1, 1, 1, 1, 9: 1, 1, 1, 96: 1, 98: 1, 1, 101: 1},
		{46: 1363, 134: 1362, 306: 1365},
		{472, 3: 472, 472, 472, 472, 9: 472, 472, 472, 96: 472, 98: 472, 472, 101: 472},
		{437, 3: 437, 1394, 1386, 1117, 9: 1393, 1392, 1391, 98: 1395, 101: 1396, 238: 1387, 242: 1390, 244: 1388, 1389, 260: 1385, 316: 1384, 348: 1382, 379: 1383},
		{446, 3: 446, 446, 446, 446, 9: 446, 446, 446, 15: 446, 36: 1370, 98: 446, 101: 446, 137: 446, 236: 446, 268: 446, 364: 1369, 366: 1368},
		// 670
		{448, 3: 448, 448, 448, 448, 9: 448, 448, 448, 98: 448, 101: 448},
		{444, 3: 444, 444, 444, 444, 9: 444, 444, 444, 15: 444, 98: 444, 101: 444, 137: 444, 236: 444, 268: 1373, 370: 1372},
		{236: 1371},
		{445, 3: 445, 445, 445, 445, 9: 445, 445, 445, 15: 445, 98: 445, 101: 445, 137: 445, 236: 445, 268: 445},
		{442, 3: 442, 442, 442, 442, 9: 442, 442, 442, 15: 442, 98: 442, 101: 442, 137: 442, 236: 1377, 387: 1376},
		// 675
		{253: 1374},
		{46: 715, 48: 714, 122: 1375},
		{443, 3: 443, 443, 443, 443, 9: 443, 443, 443, 15: 443, 98: 443, 101: 443, 137: 443, 236: 443},
		{440, 3: 440, 440, 440, 440, 9: 440, 440, 440, 15: 1380, 98: 440, 101: 440, 137: 1379, 409: 1378},
		{441, 3: 441, 441, 441, 441, 9: 441, 441, 441, 15: 441, 98: 441, 101: 441, 137: 441},
		// 680
		{447, 3: 447, 447, 447, 447, 9: 447, 447, 447, 98: 447, 101: 447},
		{439, 3: 439, 439, 439, 439, 9: 439, 439, 439, 98: 439, 101: 439},
		{137: 1381},
		{438, 3: 438, 438, 438, 438, 9: 438, 438, 438, 98: 438, 101: 438},
		{486, 3: 486},
		// 685
		{436, 3: 436},
		{435, 3: 435, 1394, 1386, 1117, 9: 1393, 1392, 1391, 238: 1409, 242: 1410, 244: 1388, 1389, 260: 1408},
		{434, 3: 434, 434, 434, 434, 9: 434, 434, 434},
		{46: 715, 48: 714, 122: 1407},
		{4: 1394, 6: 1117, 9: 1393, 1392, 1391, 242: 1405, 244: 1404, 1389},
		// 690
		{95, 3: 95, 95, 95, 95, 9: 95, 95, 95},
		{82, 3: 82, 82, 82, 82, 9: 82, 1076, 82, 32: 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1071, 1072, 239: 1403},
		{82, 3: 82, 82, 82, 82, 9: 82, 1076, 82, 32: 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1071, 1072, 239: 1402},
		{92, 3: 92, 92, 92, 92, 9: 92, 92, 92, 32: 92, 92, 92, 92, 92, 38: 92, 92, 41: 92, 43: 92, 72: 92},
		{11: 1401},
		// 695
		{90, 3: 90, 90, 90, 90, 9: 90, 90, 90, 32: 90, 90, 90, 90, 90, 38: 90, 90, 41: 90, 43: 90, 72: 90},
		{138: 1400},
		{336: 1398},
		{80: 1397},
		{54, 3: 54},
		// 700
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 711, 713, 237: 1399},
		{55, 3: 55},
		{89, 3: 89, 89, 89, 89, 9: 89, 89, 89, 32: 89, 89, 89, 89, 89, 38: 89, 89, 41: 89, 43: 89, 72: 89},
		{91, 3: 91, 91, 91, 91, 9: 91, 91, 91, 32: 91, 91, 91, 91, 91, 38: 91, 91, 41: 91, 43: 91, 72: 91},
		{93, 3: 93, 93, 93, 93, 9: 93, 93, 93},
		// 705
		{94, 3: 94, 94, 94, 94, 9: 94, 94, 94},
		{96, 3: 96, 96, 96, 96, 9: 96, 96, 96},
		{82, 3: 82, 82, 82, 82, 9: 82, 1076, 82, 32: 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1071, 1072, 239: 1406},
		{93, 3: 93, 93, 93, 93, 9: 93, 93, 93},
		{4: 97, 6: 97, 9: 97, 97, 97, 141: 97},
		// 710
		{433, 3: 433, 433, 433, 433, 9: 433, 433, 433},
		{4: 1394, 6: 1117, 9: 1393, 1392, 1391, 242: 1410, 244: 1404, 1389},
		{82, 3: 82, 82, 82, 82, 9: 82, 1076, 82, 32: 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1071, 1072, 239: 1411},
		{93, 3: 93, 93, 93, 93, 9: 93, 93, 93},
		{1: 358, 358, 7: 358, 358, 16: 358, 358, 358, 358, 358, 358, 358, 358, 26: 358, 358, 358, 358, 358, 40: 358, 42: 358, 44: 358, 47: 358, 76: 358, 358, 339: 1413},
		// 715
		{1: 357, 357, 7: 357, 357, 16: 357, 357, 357, 357, 357, 357, 357, 357, 26: 357, 1415, 357, 357, 357, 40: 357, 42: 357, 44: 357, 47: 357, 76: 357, 357, 359: 1414},
		{1: 354, 354, 7: 354, 354, 16: 354, 354, 354, 354, 354, 354, 354, 354, 26: 354, 28: 354, 354, 354, 40: 354, 42: 354, 44: 354, 47: 354, 76: 1419, 354, 395: 1417, 1418},
		{102: 1304, 271: 1416},
		{1: 356, 356, 7: 356, 356, 16: 356, 356, 356, 356, 356, 356, 356, 356, 26: 356, 28: 356, 356, 356, 40: 356, 42: 356, 44: 356, 47: 356, 76: 356, 356},
		{1: 348, 348, 7: 348, 348, 16: 343, 343, 343, 343, 343, 343, 343, 343, 26: 343, 28: 343, 343, 343, 40: 343, 42: 343, 44: 343, 47: 1435, 77: 1434, 361: 1433, 402: 1432},
		// 720
		{1: 351, 351, 7: 351, 351, 16: 351, 351, 351, 351, 351, 351, 351, 351, 26: 351, 28: 351, 351, 351, 40: 351, 42: 351, 44: 351, 47: 351, 76: 1426, 351, 397: 1425},
		{155: 1420},
		{14: 1421, 167: 1422},
		{158: 1424},
		{158: 1423},
		// 725
		{1: 352, 352, 7: 352, 352, 16: 352, 352, 352, 352, 352, 352, 352, 352, 26: 352, 28: 352, 352, 352, 40: 352, 42: 352, 44: 352, 47: 352, 76: 352, 352},
		{1: 353, 353, 7: 353, 353, 16: 353, 353, 353, 353, 353, 353, 353, 353, 26: 353, 28: 353, 353, 353, 40: 353, 42: 353, 44: 353, 47: 353, 76: 353, 353},
		{1: 355, 355, 7: 355, 355, 16: 355, 355, 355, 355, 355, 355, 355, 355, 26: 355, 28: 355, 355, 355, 40: 355, 42: 355, 44: 355, 47: 355, 77: 355},
		{155: 1427},
		{167: 1429, 267: 1428},
		// 730
		{291: 1431},
		{291: 1430},
		{1: 349, 349, 7: 349, 349, 16: 349, 349, 349, 349, 349, 349, 349, 349, 26: 349, 28: 349, 349, 349, 40: 349, 42: 349, 44: 349, 47: 349, 77: 349},
		{1: 350, 350, 7: 350, 350, 16: 350, 350, 350, 350, 350, 350, 350, 350, 26: 350, 28: 350, 350, 350, 40: 350, 42: 350, 44: 350, 47: 350, 77: 350},
		{1: 235, 235, 7: 235, 235, 419: 1591},
		// 735
		{16: 942, 937, 940, 938, 941, 936, 961, 1448, 26: 1453, 28: 1451, 1454, 935, 40: 1452, 42: 1455, 44: 1444, 234: 933, 939, 240: 1449, 1447, 246: 1450, 250: 1446, 288: 1443, 368: 1445},
		{46: 715, 48: 714, 122: 1439},
		{184: 1436},
		{103: 1438, 133: 1437},
		{16: 342, 342, 342, 342, 342, 342, 342, 342, 26: 342, 28: 342, 342, 342, 40: 342, 42: 342, 44: 342},
		// 740
		{16: 341, 341, 341, 341, 341, 341, 341, 341, 26: 341, 28: 341, 341, 341, 40: 341, 42: 341, 44: 341},
		{37: 1440},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1441},
		{1442, 3: 1069},
		{1: 344, 344, 7: 344, 344},
		// 745
		{1: 321, 321, 7: 321, 321, 15: 321, 942, 937, 940, 938, 941, 936, 961, 1448, 321, 321, 1453, 28: 1451, 1454, 935, 40: 1452, 234: 933, 939, 240: 1449, 1447, 246: 1588, 250: 1494, 333: 1587},
		{42: 1489, 198: 1487, 233: 1488, 399: 1486},
		{1: 345, 345, 7: 345, 345},
		{1: 338, 338, 7: 338, 338, 15: 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 338, 28: 338, 338, 338, 40: 338},
		{1: 336, 336, 7: 336, 336, 15: 336, 336, 937, 336, 938, 336, 936, 961, 336, 336, 336, 336, 28: 336, 336, 935, 40: 336, 234: 1024, 939},
		// 750
		{46: 715, 48: 714, 1484, 122: 1483},
		{1: 333, 333, 7: 333, 333, 15: 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 28: 333, 333, 333, 40: 333},
		{1: 332, 332, 7: 332, 332, 15: 332, 332, 332, 332, 332, 332, 332, 332, 332, 332, 332, 332, 28: 332, 332, 332, 40: 332},
		{1: 319, 319, 7: 319, 319, 15: 319, 319, 319, 319, 319, 319, 319, 319, 319, 319, 319, 319, 28: 319, 319, 319, 40: 319},
		{172: 1479},
		// 755
		{172: 1461},
		{1: 314, 314, 7: 314, 314, 15: 314, 314, 314, 314, 314, 314, 314, 314, 314, 314, 314, 314, 28: 314, 314, 314, 40: 314},
		{166: 1456},
		{180: 1457},
		{1: 238, 238, 7: 238, 238, 170: 238, 307: 1458},
		// 760
		{1: 237, 237, 7: 237, 237, 170: 1459},
		{162: 1460},
		{1: 236, 236, 7: 236, 236},
		{28: 1462},
		{1: 313, 313, 7: 313, 313, 15: 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 28: 313, 313, 313, 40: 313, 226: 1464, 346: 1463},
		// 765
		{1: 306, 306, 7: 306, 306, 15: 1473, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 306, 28: 306, 306, 306, 40: 1472, 345: 1471},
		{168: 1465, 179: 1466},
		{1: 312, 312, 7: 312, 312, 15: 312, 312, 312, 312, 312, 312, 312, 312, 312, 312, 312, 312, 28: 312, 312, 312, 40: 312, 139: 1470, 1469},
		{1: 309, 309, 7: 309, 309, 15: 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 309, 28: 309, 309, 309, 40: 309, 139: 1468, 1467},
		{1: 308, 308, 7: 308, 308, 15: 308, 308, 308, 308, 308, 308, 308, 308, 308, 308, 308, 308, 28: 308, 308, 308, 40: 308},
		// 770
		{1: 307, 307, 7: 307, 307, 15: 307, 307, 307, 307, 307, 307, 307, 307, 307, 307, 307, 307, 28: 307, 307, 307, 40: 307},
		{1: 311, 311, 7: 311, 311, 15: 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 311, 28: 311, 311, 311, 40: 311},
		{1: 310, 310, 7: 310, 310, 15: 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 28: 310, 310, 310, 40: 310},
		{1: 315, 315, 7: 315, 315, 15: 315, 315, 315, 315, 315, 315, 315, 315, 315, 315, 315, 315, 28: 315, 315, 315, 40: 315},
		{290: 1477},
		// 775
		{40: 1474},
		{290: 1475},
		{163: 1476},
		{1: 304, 304, 7: 304, 304, 15: 304, 304, 304, 304, 304, 304, 304, 304, 304, 304, 304, 304, 28: 304, 304, 304, 40: 304},
		{163: 1478},
		// 780
		{1: 305, 305, 7: 305, 305, 15: 305, 305, 305, 305, 305, 305, 305, 305, 305, 305, 305, 305, 28: 305, 305, 305, 40: 305},
		{28: 1480},
		{1: 318, 318, 7: 318, 318, 15: 318, 318, 318, 318, 318, 318, 318, 318, 318, 318, 318, 318, 28: 318, 318, 318, 40: 318, 149: 1482, 181: 1481},
		{1: 317, 317, 7: 317, 317, 15: 317, 317, 317, 317, 317, 317, 317, 317, 317, 317, 317, 317, 28: 317, 317, 317, 40: 317},
		{1: 316, 316, 7: 316, 316, 15: 316, 316, 316, 316, 316, 316, 316, 316, 316, 316, 316, 316, 28: 316, 316, 316, 40: 316},
		// 785
		{1: 335, 335, 7: 335, 335, 15: 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 28: 335, 335, 335, 40: 335},
		{46: 715, 48: 714, 122: 1485},
		{1: 334, 334, 7: 334, 334, 15: 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 28: 334, 334, 334, 40: 334},
		{1: 346, 346, 7: 346, 346},
		{1: 340, 340, 7: 340, 340, 15: 340, 942, 937, 940, 938, 941, 936, 961, 1448, 340, 340, 1453, 28: 1451, 1454, 935, 40: 1452, 234: 933, 939, 240: 1449, 1447, 246: 1450, 250: 1446, 288: 1491, 330: 1495},
		// 790
		{1: 340, 340, 7: 340, 340, 16: 942, 937, 940, 938, 941, 936, 961, 1448, 26: 1453, 28: 1451, 1454, 935, 40: 1452, 234: 933, 939, 240: 1449, 1447, 246: 1450, 250: 1446, 288: 1491, 330: 1492},
		{1: 238, 238, 7: 238, 238, 307: 1490},
		{1: 241, 241, 7: 241, 241},
		{1: 339, 339, 7: 339, 339, 15: 339, 942, 937, 940, 938, 941, 936, 961, 1448, 339, 339, 1453, 28: 1451, 1454, 935, 40: 1452, 234: 933, 939, 240: 1449, 1447, 246: 1450, 250: 1494},
		{1: 239, 239, 7: 239, 239, 378: 1493},
		// 795
		{1: 242, 242, 7: 242, 242},
		{1: 337, 337, 7: 337, 337, 15: 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 337, 28: 337, 337, 337, 40: 337},
		{1: 321, 321, 7: 321, 321, 15: 321, 24: 321, 321, 1453, 28: 1451, 1454, 40: 1452, 246: 1496, 333: 1498, 369: 1497},
		{1: 320, 320, 7: 320, 320, 15: 320, 24: 320, 320},
		{1: 243, 243, 7: 243, 243},
		// 800
		{1: 303, 303, 7: 303, 303, 15: 1500, 24: 303, 1499, 248: 1503, 261: 1502, 1501, 318: 1504},
		{1: 298, 298, 7: 298, 298, 15: 1533, 24: 298, 298, 37: 1534, 120: 298, 298, 125: 298, 136: 298, 147: 1532, 317: 1554, 380: 1553},
		{25: 1551},
		{1: 300, 300, 7: 300, 300, 24: 300},
		{1: 263, 263, 7: 263, 263, 15: 1527, 24: 263, 1526, 248: 1525},
		// 805
		{1: 262, 262, 7: 262, 262, 15: 262, 24: 262, 262},
		{1: 257, 257, 7: 257, 257, 24: 1505, 310: 1506},
		{34: 1510, 1509, 50: 1507, 187: 1511, 1513, 192: 1512, 267: 1508},
		{1: 240, 240, 7: 240, 240},
		{145: 1523},
		// 810
		{145: 1521},
		{145: 1519},
		{145: 1514},
		{1: 252, 252, 7: 252, 252},
		{1: 251, 251, 7: 251, 251},
		// 815
		{1: 250, 250, 7: 250, 250},
		{1: 246, 246, 7: 246, 246, 256: 1516, 1518, 1515, 1517},
		{1: 253, 253, 7: 253, 253},
		{1: 249, 249, 7: 249, 249},
		{1: 248, 248, 7: 248, 248},
		// 820
		{1: 247, 247, 7: 247, 247},
		{1: 246, 246, 7: 246, 246, 256: 1516, 1518, 1520, 1517},
		{1: 254, 254, 7: 254, 254},
		{1: 246, 246, 7: 246, 246, 256: 1516, 1518, 1522, 1517},
		{1: 255, 255, 7: 255, 255},
		// 825
		{1: 246, 246, 7: 246, 246, 256: 1516, 1518, 1524, 1517},
		{1: 256, 256, 7: 256, 256},
		{1: 261, 261, 7: 261, 261, 15: 261, 24: 261, 261},
		{15: 1533, 37: 1534, 147: 1532, 317: 1535},
		{25: 1528},
		// 830
		{37: 1529},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1530},
		{1531, 3: 1069},
		{1: 258, 258, 7: 258, 258, 15: 258, 24: 258, 258},
		{151: 1543, 226: 1542},
		// 835
		{147: 1541},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1539},
		{37: 1536},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1537},
		{1538, 3: 1069},
		// 840
		{1: 259, 259, 7: 259, 259, 15: 259, 24: 259, 259},
		{1540, 3: 1069},
		{1: 260, 260, 7: 260, 260, 15: 260, 24: 260, 260},
		{1: 290, 290, 7: 290, 290, 15: 290, 24: 290, 290, 37: 290, 120: 290, 290, 125: 290, 136: 290},
		{168: 1545, 182: 1546, 189: 1544},
		// 845
		{1: 289, 289, 7: 289, 289, 15: 289, 24: 289, 289, 37: 289, 120: 289, 289, 125: 289, 136: 289},
		{1: 297, 297, 7: 297, 297, 15: 297, 24: 297, 297, 37: 297, 120: 297, 297, 125: 297, 136: 297},
		{1: 296, 296, 7: 296, 296, 15: 296, 24: 296, 296, 37: 296, 120: 296, 296, 125: 296, 136: 296, 139: 1550, 1549},
		{1: 293, 293, 7: 293, 293, 15: 293, 24: 293, 293, 37: 293, 120: 293, 293, 125: 293, 136: 293, 139: 1548, 1547},
		{1: 292, 292, 7: 292, 292, 15: 292, 24: 292, 292, 37: 292, 120: 292, 292, 125: 292, 136: 292},
		// 850
		{1: 291, 291, 7: 291, 291, 15: 291, 24: 291, 291, 37: 291, 120: 291, 291, 125: 291, 136: 291},
		{1: 295, 295, 7: 295, 295, 15: 295, 24: 295, 295, 37: 295, 120: 295, 295, 125: 295, 136: 295},
		{1: 294, 294, 7: 294, 294, 15: 294, 24: 294, 294, 37: 294, 120: 294, 294, 125: 294, 136: 294},
		{1: 264, 264, 7: 264, 264, 15: 1527, 24: 264, 1526, 37: 1529, 248: 1503, 261: 1502, 1552},
		{1: 301, 301, 7: 301, 301, 24: 301},
		// 855
		{1: 264, 264, 7: 264, 264, 15: 1527, 24: 264, 1526, 248: 1503, 261: 1502, 1586},
		{1: 288, 288, 7: 288, 288, 15: 288, 24: 288, 288, 37: 1536, 120: 288, 288, 125: 288, 136: 1556, 385: 1555},
		{1: 282, 282, 7: 282, 282, 15: 282, 24: 282, 282, 120: 282, 282, 125: 1563, 381: 1562},
		{139: 1560, 1558, 143: 1557, 185: 1561, 203: 1559},
		{1: 287, 287, 7: 287, 287, 15: 287, 24: 287, 287, 120: 287, 287, 125: 287},
		// 860
		{1: 286, 286, 7: 286, 286, 15: 286, 24: 286, 286, 120: 286, 286, 125: 286},
		{1: 285, 285, 7: 285, 285, 15: 285, 24: 285, 285, 120: 285, 285, 125: 285},
		{1: 284, 284, 7: 284, 284, 15: 284, 24: 284, 284, 120: 284, 284, 125: 284},
		{1: 283, 283, 7: 283, 283, 15: 283, 24: 283, 283, 120: 283, 283, 125: 283},
		{1: 270, 270, 7: 270, 270, 15: 1580, 24: 270, 270, 120: 270, 1579, 384: 1578},
		// 865
		{1: 280, 280, 7: 280, 280, 15: 280, 24: 280, 280, 120: 280, 280, 151: 1565, 226: 280, 253: 1566, 382: 1564},
		{1: 275, 275, 7: 275, 275, 15: 275, 24: 275, 275, 120: 275, 275, 226: 1572, 383: 1571},
		{1: 279, 279, 7: 279, 279, 15: 279, 24: 279, 279, 120: 279, 279, 226: 279},
		{80: 1567, 166: 1568, 213: 1569},
		{209: 1570},
		// 870
		{1: 277, 277, 7: 277, 277, 15: 277, 24: 277, 277, 120: 277, 277, 226: 277},
		{1: 276, 276, 7: 276, 276, 15: 276, 24: 276, 276, 120: 276, 276, 226: 276},
		{1: 278, 278, 7: 278, 278, 15: 278, 24: 278, 278, 120: 278, 278, 226: 278},
		{1: 281, 281, 7: 281, 281, 15: 281, 24: 281, 281, 120: 281, 281},
		{211: 1573},
		// 875
		{27: 1574, 46: 715, 48: 714, 122: 1576, 143: 1577, 251: 1575},
		{1: 274, 274, 7: 274, 274, 15: 274, 24: 274, 274, 120: 274, 274},
		{1: 273, 273, 7: 273, 273, 15: 273, 24: 273, 273, 120: 273, 273},
		{1: 272, 272, 7: 272, 272, 15: 272, 24: 272, 272, 120: 272, 272},
		{1: 271, 271, 7: 271, 271, 15: 271, 24: 271, 271, 120: 271, 271},
		// 880
		{1: 266, 266, 7: 266, 266, 15: 266, 24: 266, 266, 120: 1584, 386: 1583},
		{1: 269, 269, 7: 269, 269, 15: 269, 24: 269, 269, 120: 269, 251: 1582},
		{121: 1581},
		{1: 267, 267, 7: 267, 267, 15: 267, 24: 267, 267, 120: 267},
		{1: 268, 268, 7: 268, 268, 15: 268, 24: 268, 268, 120: 268},
		// 885
		{1: 299, 299, 7: 299, 299, 15: 299, 24: 299, 299},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1585},
		{1: 265, 265, 7: 265, 265, 15: 265, 24: 265, 265},
		{1: 302, 302, 7: 302, 302, 24: 302},
		{1: 303, 303, 7: 303, 303, 15: 1500, 24: 303, 1499, 248: 1503, 261: 1502, 1501, 318: 1589},
		// 890
		{1: 332, 332, 7: 332, 332, 15: 332, 332, 332, 332, 332, 332, 332, 332, 332, 332, 332, 332, 28: 332, 332, 332, 40: 332},
		{1: 257, 257, 7: 257, 257, 24: 1505, 310: 1590},
		{1: 347, 347, 7: 347, 347},
		{1: 360, 360, 7: 360, 360},
		{1: 363, 363, 8: 1602, 401: 1601},
		// 895
		{1: 4, 4, 7: 1598, 4, 321: 1597},
		{226: 1595},
		{169: 1596},
		{1: 5, 5, 7: 5, 5, 14: 5, 5, 26: 5, 49: 5, 5, 52: 5, 78: 5},
		{1: 7, 7, 8: 7},
		// 900
		{226: 1599},
		{176: 1600},
		{1: 3, 3, 8: 3, 14: 3, 26: 3, 49: 3, 3, 52: 3, 78: 3},
		{1: 377, 377},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 711, 713, 237: 1603},
		// 905
		{1: 362, 362},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 711, 713, 237: 1605},
		{7: 1594, 14: 6, 1609, 26: 6, 49: 6, 6, 52: 6, 78: 6, 320: 1608, 390: 1606, 1607},
		{14: 1633, 26: 1631, 49: 1632, 1628, 52: 1629, 78: 1634, 292: 1625, 294: 1624, 299: 1627, 302: 1636, 322: 1626, 324: 1630, 337: 1619, 341: 1622, 344: 1620, 353: 1621, 363: 1635, 408: 1623},
		{7: 1598, 14: 4, 1615, 26: 4, 49: 4, 4, 52: 4, 78: 4, 321: 1614, 392: 1613},
		// 910
		{7: 11, 14: 11, 11, 26: 11, 49: 11, 11, 52: 11, 78: 11},
		{7: 1610},
		{226: 1611},
		{169: 1612},
		{7: 10, 14: 10, 10, 26: 10, 49: 10, 10, 52: 10, 78: 10},
		// 915
		{14: 12, 26: 12, 49: 12, 12, 52: 12, 78: 12},
		{14: 9, 26: 9, 49: 9, 9, 52: 9, 78: 9},
		{7: 1616},
		{226: 1617},
		{176: 1618},
		// 920
		{14: 8, 26: 8, 49: 8, 8, 52: 8, 78: 8},
		{1: 502, 502},
		{1: 501, 501},
		{1: 500, 500},
		{1: 499, 499, 14: 1760, 26: 1631, 49: 1632, 1758, 52: 1759, 292: 1625, 294: 1757, 299: 1627, 322: 1626, 324: 1630},
		// 925
		{1: 498, 498},
		{1: 497, 497, 14: 497, 26: 497, 49: 497, 497, 52: 497},
		{1: 495, 495, 14: 495, 26: 495, 49: 495, 495, 52: 495},
		{1: 494, 494, 14: 494, 26: 494, 49: 494, 494, 52: 494},
		{1: 493, 493, 14: 493, 26: 493, 49: 493, 493, 52: 493},
		// 930
		{4: 1111, 1386, 9: 1065, 37: 1748, 141: 1112, 238: 1063, 263: 1064, 286: 1749},
		{4: 1709, 1708, 9: 1710, 37: 1707},
		{1: 430, 430, 14: 430, 26: 430, 49: 430, 430, 52: 430},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1694},
		{148: 1689},
		// 935
		{4: 1639, 1641, 9: 1640, 26: 1670, 37: 1671, 146: 1669, 148: 1668, 272: 1667},
		{5: 1660, 26: 1659},
		{1: 390, 390, 14: 1638, 302: 1637},
		{1: 389, 389, 14: 389},
		{1: 388, 388, 14: 388},
		// 940
		{4: 1639, 1641, 9: 1640},
		{138: 1656},
		{37: 1651},
		{46: 715, 48: 714, 122: 1642},
		{1: 384, 384, 14: 384, 31: 1644, 45: 384, 135: 384, 243: 1643},
		// 945
		{1: 381, 381, 14: 381, 45: 381, 135: 1647, 278: 1645, 280: 1646},
		{1: 383, 383, 14: 383, 45: 383, 135: 383},
		{1: 385, 385, 14: 385},
		{1: 379, 379, 14: 379, 45: 1650, 398: 1649},
		{233: 1648},
		// 950
		{1: 380, 380, 14: 380, 45: 380},
		{1: 382, 382, 14: 382},
		{1: 378, 378, 14: 378},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1652},
		{1653, 3: 1069},
		// 955
		{1: 384, 384, 14: 384, 31: 1644, 45: 384, 135: 384, 243: 1654},
		{1: 381, 381, 14: 381, 45: 381, 135: 1647, 278: 1655, 280: 1646},
		{1: 386, 386, 14: 386},
		{1: 384, 384, 14: 384, 31: 1644, 45: 384, 135: 384, 243: 1657},
		{1: 381, 381, 14: 381, 45: 381, 135: 1647, 278: 1658, 280: 1646},
		// 960
		{1: 387, 387, 14: 387},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1664},
		{46: 715, 48: 714, 122: 1661},
		{89: 1662},
		{46: 715, 48: 714, 122: 1663},
		// 965
		{1: 391, 391},
		{89: 1665},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1666},
		{1: 396, 396},
		{1: 406, 406, 14: 406, 26: 406, 31: 1684, 49: 406, 406, 406, 406, 1685, 277: 1683, 300: 1682, 1681},
		// 970
		{146: 1679},
		{183: 1675},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1674},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1672},
		{1673, 3: 1069},
		// 975
		{1: 407, 407, 14: 407, 26: 407, 31: 407, 45: 407, 49: 407, 407, 407, 407, 407},
		{1: 408, 408, 14: 408, 26: 408, 31: 408, 45: 408, 49: 408, 408, 408, 408, 408},
		{1: 398, 398, 14: 398, 26: 398, 49: 398, 398, 1677, 398, 276: 1676},
		{1: 409, 409, 14: 409, 26: 409, 49: 409, 409, 52: 409},
		{134: 1678},
		// 980
		{1: 397, 397, 14: 397, 26: 397, 49: 397, 397, 52: 397},
		{1: 398, 398, 14: 398, 26: 398, 49: 398, 398, 1677, 398, 276: 1680},
		{1: 410, 410, 14: 410, 26: 410, 49: 410, 410, 52: 410},
		{1: 398, 398, 14: 398, 26: 398, 49: 398, 398, 1677, 398, 276: 1688},
		{1: 405, 405, 14: 405, 26: 405, 31: 1684, 45: 405, 49: 405, 405, 405, 405, 1685, 277: 1687},
		// 985
		{1: 404, 404, 14: 404, 26: 404, 31: 404, 45: 404, 49: 404, 404, 404, 404, 404},
		{156: 1686},
		{1: 401, 401, 14: 401, 26: 401, 31: 401, 45: 401, 49: 401, 401, 401, 401, 401},
		{1: 402, 402, 14: 402, 26: 402, 31: 402, 45: 402, 49: 402, 402, 402, 402, 402},
		{1: 403, 403, 14: 403, 26: 403, 31: 403, 45: 403, 49: 403, 403, 403, 403, 403},
		// 990
		{1: 411, 411, 14: 411, 26: 411, 49: 411, 411, 52: 411},
		{26: 1670, 37: 1671, 272: 1690},
		{1: 406, 406, 14: 406, 26: 406, 31: 1684, 45: 406, 49: 406, 406, 52: 406, 1685, 277: 1683, 300: 1682, 1691},
		{1: 400, 400, 14: 400, 26: 400, 45: 1693, 49: 400, 400, 52: 400, 362: 1692},
		{1: 412, 412, 14: 412, 26: 412, 49: 412, 412, 52: 412},
		// 995
		{1: 399, 399, 14: 399, 26: 399, 49: 399, 399, 52: 399},
		{10: 1696, 75: 1695},
		{150: 1703},
		{75: 1697},
		{150: 1698},
		// 1000
		{251: 1699},
		{161: 1700},
		{1: 414, 414, 14: 414, 26: 414, 49: 414, 414, 52: 414, 159: 1702, 319: 1701},
		{1: 415, 415, 14: 415, 26: 415, 49: 415, 415, 52: 415},
		{1: 413, 413, 14: 413, 26: 413, 49: 413, 413, 52: 413},
		// 1005
		{251: 1704},
		{161: 1705},
		{1: 414, 414, 14: 414, 26: 414, 49: 414, 414, 52: 414, 159: 1702, 319: 1706},
		{1: 416, 416, 14: 416, 26: 416, 49: 416, 416, 52: 416},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1726, 323: 1724, 325: 1727, 1725, 393: 1722, 1723},
		// 1010
		{46: 715, 48: 714, 122: 1719},
		{138: 1716},
		{37: 1711},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1067, 228: 1712},
		{1713, 3: 1069},
		// 1015
		{1: 79, 79, 10: 1076, 31: 79, 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1714, 1072},
		{1: 384, 384, 31: 1644, 243: 1715},
		{1: 392, 392},
		{1: 79, 79, 10: 1076, 31: 79, 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1717, 1072},
		{1: 384, 384, 31: 1644, 243: 1718},
		// 1020
		{1: 393, 393},
		{1: 79, 79, 10: 1076, 31: 79, 79, 79, 79, 79, 79, 38: 79, 79, 41: 1075, 43: 1077, 72: 79, 229: 1073, 1074, 1720, 1072},
		{1: 384, 384, 31: 1644, 243: 1721},
		{1: 394, 394},
		{1744, 3: 1745},
		// 1025
		{1740, 3: 1741},
		{429, 3: 429},
		{427, 3: 427},
		{12: 1310, 1311, 54: 1168, 1165, 1156, 1155, 1162, 1163, 1173, 1177, 1175, 1161, 1170, 1151, 1164, 1171, 1152, 1178, 1160, 1167, 79: 1149, 1166, 1158, 1159, 1172, 1154, 1174, 1157, 1153, 1176, 90: 1169, 1150, 1179, 269: 1141, 1143, 274: 1728, 1146, 279: 1729, 281: 1147, 1145, 1144, 1142, 1140, 287: 1148},
		{419, 3: 419},
		// 1030
		{485, 3: 485, 485, 485, 485, 9: 485, 485, 485, 14: 485, 27: 485, 96: 485, 99: 485, 485, 102: 1304, 271: 1303, 295: 1730},
		{417, 3: 417},
		{476, 3: 476, 476, 476, 476, 9: 476, 476, 476, 14: 1732, 27: 1315, 96: 476, 99: 476, 1316, 297: 1313, 1733, 308: 1314, 360: 1731},
		{449, 3: 449, 449, 449, 449, 9: 449, 449, 449, 96: 1367, 99: 1736, 305: 1737, 365: 1735},
		{142: 1734},
		// 1035
		{424, 3: 424, 424, 424, 424, 9: 424, 424, 424, 96: 424, 99: 424},
		{425, 3: 425, 425, 425, 425, 9: 425, 425, 425, 96: 425, 99: 425},
		{421, 3: 421, 1394, 1386, 1117, 9: 1393, 1392, 1391, 238: 1409, 242: 1410, 244: 1388, 1389, 260: 1385, 316: 1738, 347: 1739},
		{423, 3: 423, 423, 423, 423, 9: 423, 423, 423},
		{422, 3: 422, 422, 422, 422, 9: 422, 422, 422},
		// 1040
		{420, 3: 420, 1394, 1386, 1117, 9: 1393, 1392, 1391, 238: 1409, 242: 1410, 244: 1388, 1389, 260: 1408},
		{426, 3: 426},
		{1: 431, 431, 14: 431, 26: 431, 49: 431, 431, 52: 431},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1743, 325: 1742},
		{418, 3: 418},
		// 1045
		{12: 1310, 1311, 279: 1729},
		{1: 432, 432, 14: 432, 26: 432, 49: 432, 432, 52: 432},
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1747, 323: 1746, 326: 1725},
		{428, 3: 428},
		{54: 1168, 1165, 1156, 1155, 1162, 1163, 1173, 1177, 1175, 1161, 1170, 1151, 1164, 1171, 1152, 1178, 1160, 1167, 79: 1149, 1166, 1158, 1159, 1172, 1154, 1174, 1157, 1153, 1176, 90: 1169, 1150, 1179, 269: 1141, 1143, 274: 1728, 1146, 281: 1147, 1145, 1144, 1142, 1140, 287: 1148},
		// 1050
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1058, 254: 1751, 264: 1057, 349: 1750},
		{1: 395, 395},
		{1752, 3: 1753},
		{489, 3: 489},
		{1: 491, 491, 14: 491, 26: 491, 49: 491, 491, 52: 491, 351: 1755},
		// 1055
		{4: 845, 741, 854, 809, 836, 12: 793, 883, 15: 819, 769, 787, 801, 805, 822, 840, 866, 871, 783, 788, 31: 733, 766, 830, 755, 763, 880, 38: 828, 856, 41: 751, 768, 786, 833, 46: 715, 860, 714, 51: 736, 53: 791, 735, 723, 724, 725, 727, 737, 749, 759, 789, 790, 815, 816, 817, 831, 832, 852, 874, 878, 73: 848, 863, 869, 96: 765, 864, 858, 750, 777, 102: 738, 752, 876, 879, 785, 827, 829, 835, 841, 729, 734, 770, 773, 774, 804, 811, 818, 839, 865, 760, 712, 731, 746, 757, 806, 812, 820, 821, 823, 824, 826, 135: 795, 846, 857, 796, 781, 802, 772, 782, 825, 882, 842, 739, 808, 877, 716, 719, 721, 726, 728, 730, 740, 742, 747, 753, 771, 792, 797, 798, 800, 813, 814, 838, 844, 849, 851, 855, 859, 867, 872, 873, 875, 884, 886, 717, 718, 720, 722, 732, 743, 744, 745, 748, 754, 756, 758, 761, 762, 764, 767, 775, 776, 778, 779, 780, 784, 794, 799, 803, 807, 810, 834, 837, 843, 847, 850, 853, 861, 862, 868, 870, 881, 885, 920, 713, 222: 1058, 254: 1754, 264: 1057},
		{488, 3: 488},
		{1: 490, 490, 14: 490, 26: 490, 49: 490, 490, 52: 490, 400: 1756},
		{1: 492, 492, 14: 492, 26: 492, 49: 492, 492, 52: 492},
		{1: 496, 496, 14: 496, 26: 496, 49: 496, 496, 52: 496},
		// 1060
		{37: 1748},
		{37: 1707},
		{26: 1670, 37: 1671, 146: 1669, 148: 1668, 272: 1667},
		{1: 689, 689, 14: 709, 266: 708, 273: 705, 289: 707, 293: 703, 296: 704, 303: 706, 702, 331: 1762},
		{1: 695, 695},
	}
)

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyLexerEx interface {
	yyLexer
	Reduced(rule, state int, lval *yySymType) bool
}

func yySymName(c int) (s string) {
	x, ok := yyXLAT[c]
	if ok {
		return yySymNames[x]
	}

	if c < 0x7f {
		return __yyfmt__.Sprintf("%q", c)
	}

	return __yyfmt__.Sprintf("%d", c)
}

func yylex1(yylex yyLexer, lval *yySymType) (n int) {
	n = yylex.Lex(lval)
	if n <= 0 {
		n = yyEofCode
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("\nlex %s(%#x %d), lval: %+v\n", yySymName(n), n, n, lval)
	}
	return n
}
	
func yyParse(yylex yyLexer) int {
	const yyError = 426

	yyEx, _ := yylex.(yyLexerEx)
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, 200)


	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yyerrok := func() { 
		if yyDebug >= 2 {
			__yyfmt__.Printf("yyerrok()\n")
		}
		Errflag = 0
	}
	_ = yyerrok
	yystate := 0
	yychar := -1
	var yyxchar int
	var yyshift int
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	if yychar < 0 {
		yylval.yys = yystate
		yychar = yylex1(yylex, &yylval)
		var ok bool
		if yyxchar, ok = yyXLAT[yychar]; !ok {
			yyxchar = len(yySymNames) // > tab width
		}
	}
	if yyDebug >= 4 {
		var a []int
		for _, v := range yyS[:yyp+1] {
			a = append(a, v.yys)
		}
		__yyfmt__.Printf("state stack %v\n", a)
	}
	row := yyParseTab[yystate]
	yyn = 0
	if yyxchar < len(row) {
		if yyn = int(row[yyxchar]); yyn != 0 {
			yyn += yyTabOfs
		}
	}
	switch {
	case yyn > 0: // shift
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		yyshift = yyn
		if yyDebug >= 2 {
			__yyfmt__.Printf("shift, and goto state %d\n", yystate)
		}
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	case yyn < 0: // reduce
	case yystate == 1: // accept
		if yyDebug >= 2 {
			__yyfmt__.Println("accept")
		}
		goto ret0
	}

	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			if yyDebug >= 1 {
				__yyfmt__.Printf("no action for %s in state %d\n", yySymName(yychar), yystate)
			}
			msg, ok := yyXErrors[yyXError{yystate, yyxchar}]
			if !ok {
				msg, ok = yyXErrors[yyXError{yystate, -1}]
			}
			if !ok && yyshift != 0 {
				msg, ok = yyXErrors[yyXError{yyshift, yyxchar}]
			}
			if !ok {
				msg, ok = yyXErrors[yyXError{yyshift, -1}]
			}
			if yychar > 0 {
				ls := yyTokenLiteralStrings[yychar]
				if ls == "" {
					ls = yySymName(yychar)
				}
				if ls != "" {
					switch {
					case msg == "":
						msg = __yyfmt__.Sprintf("unexpected %s", ls)
					default:
						msg = __yyfmt__.Sprintf("unexpected %s, %s", ls, msg)
					}
				}
			}
			if msg == "" {
				msg = "syntax error"
			}
			yylex.Error(msg)
			Nerrs++
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				row := yyParseTab[yyS[yyp].yys]
				if yyError < len(row) {
					yyn = int(row[yyError])+yyTabOfs
					if yyn > 0 { // hit
						if yyDebug >= 2 {
							__yyfmt__.Printf("error recovery found error shift in state %d\n", yyS[yyp].yys)
						}
						yystate = yyn /* simulate a shift of "error" */
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery failed\n")
			}
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yySymName(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}

			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	r := -yyn
	x0 := yyReductions[r]
	x, n := x0.xsym, x0.components
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= n
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	exState := yystate
	yystate = int(yyParseTab[yyS[yyp].yys][x])+yyTabOfs
	/* reduction by production r */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce using rule %v (%s), and goto state %d\n", r, yySymNames[x], yystate)
	}

	switch r {
	case 2: {
        if yyS[yypt-0].node != nil {
            stmt := yyS[yypt-0].node
            stmt.SetText(nextQuery(yylex))
            yylex.(*yyLexImpl).result = append(yylex.(*yyLexImpl).result, stmt)
        }
    }
	case 3: {
        if yyS[yypt-0].node != nil {
            stmt := yyS[yypt-0].node
            stmt.SetText(nextQuery(yylex))
            yylex.(*yyLexImpl).result = append(yylex.(*yyLexImpl).result, stmt)
        }
    }
	case 9: {
        yyVAL.node = nil
    }
	case 10: {
    	yyVAL.anything = &ast.TableName{
	        Table: yyS[yypt-0].anything.(*element.Identifier),
	    }
    }
	case 11: {
    	yyVAL.anything = &ast.TableName{
	    Schema:	yyS[yypt-2].anything.(*element.Identifier),
	    Table: 	yyS[yypt-0].anything.(*element.Identifier),
	}
    }
	case 12: {
        yyVAL.anything = []*element.Identifier{yyS[yypt-0].anything.(*element.Identifier)}
    }
	case 13: {
        yyVAL.anything = append(yyS[yypt-2].anything.([]*element.Identifier), yyS[yypt-0].anything.(*element.Identifier))
    }
	case 14: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 21: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 22: {
        yyVAL.anything = &element.Identifier{
            Typ: element.IdentifierTypeNonQuoted,
            Value: yyS[yypt-0].str,
        }
    }
	case 23: {
        yyVAL.anything = &element.Identifier{
            Typ: element.IdentifierTypeNonQuoted,
            Value: yyS[yypt-0].str,
        }
    }
	case 24: {
        yyVAL.anything = &element.Identifier{
            Typ: element.IdentifierTypeQuoted,
            Value: yyS[yypt-0].str,
        }
    }
	case 196: {
        yyVAL.node = &ast.AlterTableStmt{
            TableName:      	yyS[yypt-2].anything.(*ast.TableName),
            AlterTableClauses:  yyS[yypt-0].anything.([]ast.AlterTableClause),
        }
    }
	case 197: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 198: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 199: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 200: {
        yyVAL.anything = []ast.AlterTableClause{yyS[yypt-0].anything.(ast.AlterTableClause)}
    }
	case 201: {
        yyVAL.anything = []ast.AlterTableClause{yyS[yypt-0].anything.(ast.AlterTableClause)}
    }
	case 202: {
        yyVAL.anything = append(yyS[yypt-1].anything.([]ast.AlterTableClause), yyS[yypt-0].anything.(ast.AlterTableClause))
    }
	case 206: {
        yyVAL.anything = &ast.AddColumnClause{
	        Columns: yyS[yypt-3].anything.([]*ast.ColumnDef),
        }
    }
	case 207: {
        // TODO
    }
	case 208: {
        // TODO
    }
	case 209: {
        yyVAL.anything = []*ast.ColumnDef{yyS[yypt-0].anything.(*ast.ColumnDef)}
    }
	case 210: {
        yyVAL.anything = append(yyS[yypt-2].anything.([]*ast.ColumnDef), yyS[yypt-0].anything.(*ast.ColumnDef))
    }
	case 211: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 212: {
        var collation *ast.Collation
        if yyS[yypt-5].anything != nil {
            collation = yyS[yypt-5].anything.(*ast.Collation)
	    }
        props := []ast.ColumnProp{}
        sort := ast.ColumnProp(yyS[yypt-4].i)
        if sort != ast.ColumnPropEmpty {
            props = append(props, sort)
        }
        invisible := ast.ColumnProp(yyS[yypt-3].i)
        if invisible != ast.ColumnPropEmpty {
            props = append(props, invisible)
        }

        var constraints []*ast.InlineConstraint
        if yyS[yypt-0].anything != nil {
            constraints = yyS[yypt-0].anything.([]*ast.InlineConstraint)
        }

        yyVAL.anything = &ast.ColumnDef{
            ColumnName:         yyS[yypt-7].anything.(*element.Identifier),
            Datatype:           yyS[yypt-6].anything.(element.Datatype),
            Collation:          collation,
            Props:              props,
            Constraints: 	constraints,
        }
    }
	case 213: {
        yyVAL.anything = nil
    }
	case 214: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 215: {
        yyVAL.anything = &ast.Collation{Name: yyS[yypt-0].anything.(*element.Identifier)}
    }
	case 216: {
        yyVAL.i = int(ast.ColumnPropEmpty)
    }
	case 217: {
        yyVAL.i = int(ast.ColumnPropSort)
    }
	case 218: {
        yyVAL.i = int(ast.ColumnPropEmpty)
    }
	case 220: {
        yyVAL.i = int(ast.ColumnPropInvisible)
    }
	case 221: {
        yyVAL.i = int(ast.ColumnPropVisible)
    }
	case 222: {
        // empty
    }
	case 231: {
        // empty
    }
	case 233: {
        // empty
    }
	case 249: {
        // empty
    }
	case 252: {
        // empty
    }
	case 254: {
        // empty
    }
	case 256: {
        // empty
    }
	case 258: {
        // empty
    }
	case 261: {
        yyVAL.anything = nil
    }
	case 262: {
        yyVAL.anything = nil
    }
	case 263: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 264: {
        yyVAL.anything = []*ast.InlineConstraint{yyS[yypt-0].anything.(*ast.InlineConstraint)}
    }
	case 265: {
        yyVAL.anything = append(yyS[yypt-1].anything.([]*ast.InlineConstraint), yyS[yypt-0].anything.(*ast.InlineConstraint))
    }
	case 266: {
        yyVAL.anything = &ast.ModifyColumnClause{
	        Columns: yyS[yypt-1].anything.([]*ast.ColumnDef),
        }
    }
	case 267: {
        yyVAL.anything = &ast.ModifyColumnClause{
	        Columns: yyS[yypt-1].anything.([]*ast.ColumnDef),
        }
    }
	case 268: {
        yyVAL.anything = &ast.ModifyColumnClause{
	        Columns: yyS[yypt-0].anything.([]*ast.ColumnDef),
        }
    }
	case 269: {
        yyVAL.anything = []*ast.ColumnDef{yyS[yypt-0].anything.(*ast.ColumnDef)}
    }
	case 270: {
        yyVAL.anything = append(yyS[yypt-2].anything.([]*ast.ColumnDef), yyS[yypt-0].anything.(*ast.ColumnDef))
    }
	case 272: {
        var collation *ast.Collation
        if yyS[yypt-3].anything != nil {
            collation = yyS[yypt-3].anything.(*ast.Collation)
	    }
        yyVAL.anything = &ast.ColumnDef{
            ColumnName:         yyS[yypt-5].anything.(*element.Identifier),
            Datatype:           yyS[yypt-4].anything.(element.Datatype),
            Collation:          collation,
            Props:              []ast.ColumnProp{},
        }
    }
	case 277: {
        // empty
    }
	case 279: {
        yyVAL.anything = []*ast.ColumnDef{yyS[yypt-0].anything.(*ast.ColumnDef)}
    }
	case 280: {
        yyVAL.anything = append(yyS[yypt-2].anything.([]*ast.ColumnDef), yyS[yypt-0].anything.(*ast.ColumnDef))
    }
	case 281: {
        yyVAL.anything = &ast.ColumnDef{
            ColumnName: yyS[yypt-1].anything.(*element.Identifier),
            Props:      []ast.ColumnProp{ast.ColumnProp(yyS[yypt-0].i)},
        }
    }
	case 282: {
        prop := ast.ColumnPropSubstitutable
        if yyS[yypt-0].b {
            prop = ast.ColumnPropSubstitutableForce
        }
        yyVAL.anything = &ast.ColumnDef{
            ColumnName: yyS[yypt-5].anything.(*element.Identifier),
            Props:      []ast.ColumnProp{prop},
        }
    }
	case 283: {
        prop := ast.ColumnPropNotSubstitutable
        if yyS[yypt-0].b {
            prop = ast.ColumnPropNotSubstitutableForce
        }
        yyVAL.anything = &ast.ColumnDef{
            ColumnName: yyS[yypt-6].anything.(*element.Identifier),
            Props:      []ast.ColumnProp{prop},
        }
    }
	case 284: {
        yyVAL.b = false
    }
	case 285: {
        yyVAL.b = true
    }
	case 286: {
        props := []ast.DropColumnProp{}
        if yyS[yypt-1].anything != nil {
            props = append(props, yyS[yypt-1].anything.([]ast.DropColumnProp)...)
        }
        online := ast.DropColumnProp(yyS[yypt-0].i)
        if online != ast.DropColumnPropEmpty {
            props = append(props, online)
        }
    	yyVAL.anything = &ast.DropColumnClause{
            Type:    ast.DropColumnTypeSetUnused,
            Columns: yyS[yypt-2].anything.([]*element.Identifier),
            Props:   props,
    	}
    }
	case 287: {
        props := []ast.DropColumnProp{}
        if yyS[yypt-1].anything != nil {
            props = append(props, yyS[yypt-1].anything.([]ast.DropColumnProp)...)
        }
    	cc := &ast.DropColumnClause{
            Type:    ast.DropColumnTypeDrop,
            Columns: yyS[yypt-2].anything.([]*element.Identifier),
            Props:   props,
    	}
    	var checkout int
        if yyS[yypt-0].anything != nil {
            checkout = yyS[yypt-0].anything.(int)
            cc.CheckPoint = &checkout
        }
        yyVAL.anything = cc
    }
	case 288: {
    	cc := &ast.DropColumnClause{
            Type: ast.DropColumnTypeDropUnusedColumns,
    	}
    	var checkout int
        if yyS[yypt-0].anything != nil {
            checkout = yyS[yypt-0].anything.(int)
            cc.CheckPoint = &checkout
        }
        yyVAL.anything = cc
    }
	case 289: {
    	cc := &ast.DropColumnClause{
            Type: ast.DropColumnTypeDropColumnsContinue,
    	}
    	var checkout int
        if yyS[yypt-0].anything != nil {
            checkout = yyS[yypt-0].anything.(int)
            cc.CheckPoint = &checkout
        }
        yyVAL.anything = cc
    }
	case 290: {
        yyVAL.anything = []*element.Identifier{yyS[yypt-0].anything.(*element.Identifier)}
    }
	case 291: {
        yyVAL.anything = yyS[yypt-1].anything
    }
	case 292: {
        yyVAL.anything = nil
    }
	case 294: {
        yyVAL.anything = []ast.DropColumnProp{ast.DropColumnProp(yyS[yypt-0].i)}
    }
	case 295: {
        yyVAL.anything = append(yyS[yypt-1].anything.([]ast.DropColumnProp), ast.DropColumnProp(yyS[yypt-0].i))
    }
	case 296: {
        yyVAL.i = int(ast.DropColumnPropCascade)
    }
	case 297: {
        yyVAL.i = int(ast.DropColumnPropInvalidate)
    }
	case 298: {
        yyVAL.i = int(ast.DropColumnPropEmpty)
    }
	case 299: {
        yyVAL.i = int(ast.DropColumnPropOnline)
    }
	case 300: {
        yyVAL.anything = nil
    }
	case 301: {
        yyVAL.anything = yyS[yypt-0].i
    }
	case 302: {
    	yyVAL.anything = &ast.RenameColumnClause{
    	    OldName: yyS[yypt-2].anything.(*element.Identifier),
    	    NewName: yyS[yypt-0].anything.(*element.Identifier),
    	}
    }
	case 303: {
    	yyVAL.anything = []ast.AlterTableClause{&ast.AddConstraintClause{}}
    }
	case 304: {
    	yyVAL.anything = []ast.AlterTableClause{&ast.ModifyConstraintClause{}}
    }
	case 305: {
    	yyVAL.anything = []ast.AlterTableClause{&ast.ModifyConstraintClause{}}
    }
	case 306: {
    	yyVAL.anything = []ast.AlterTableClause{&ast.ModifyConstraintClause{}}
    }
	case 307: {
    	yyVAL.anything = []ast.AlterTableClause{&ast.RenameConstraintClause{}}
    }
	case 308: {
    	yyVAL.anything = yyS[yypt-0].anything
    }
	case 309: {
        yyVAL.anything = []ast.AlterTableClause{yyS[yypt-0].anything.(ast.AlterTableClause)}
    }
	case 310: {
        yyVAL.anything = append(yyS[yypt-1].anything.([]ast.AlterTableClause), yyS[yypt-0].anything.(ast.AlterTableClause))
    }
	case 311: {
    	yyVAL.anything = &ast.DropConstraintClause{}
    }
	case 312: {
    	yyVAL.anything = &ast.DropConstraintClause{}
    }
	case 313: {
    	yyVAL.anything = &ast.DropConstraintClause{}
    }
	case 314: {
        // empty
    }
	case 317: {
        // empty
    }
	case 319: {
        // empty
    }
	case 321: {
    	yyVAL.node = &ast.CreateTableStmt{
            TableName:  yyS[yypt-4].anything.(*ast.TableName),
            RelTable:   yyS[yypt-2].anything.(*ast.RelTableDef),
    	}
    }
	case 322: {
        // empty
    }
	case 330: {
        // empty
    }
	case 335: {
        // empty
    }
	case 338: {
        rd := &ast.RelTableDef{}
        if yyS[yypt-6].anything != nil {
            rd.TableStructs = yyS[yypt-6].anything.([]ast.TableStructDef)
        }
        yyVAL.anything = rd
    }
	case 341: {
        yyVAL.anything = nil
    }
	case 342: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 344: {
        // empty
    }
	case 347: {
        // empty
    }
	case 350: {
        // empty
    }
	case 355: {
        // empty
    }
	case 358: {
        // empty
    }
	case 377: {
        // empty
    }
	case 385: {
        // empty
    }
	case 392: {
        // empty
    }
	case 395: {
        // empty
    }
	case 400: {
        // empty
    }
	case 410: {
        // empty
    }
	case 416: {
        // empty
    }
	case 418: {
        // empty
    }
	case 423: {
        // empty
    }
	case 428: {
        // empty
    }
	case 432: {
        // empty
    }
	case 434: {
        // empty
    }
	case 441: {
        // empty
    }
	case 464: {
        yyVAL.anything = nil
    }
	case 465: {
        yyVAL.anything = yyS[yypt-1].anything
    }
	case 466: {
        yyVAL.anything = []ast.TableStructDef{yyS[yypt-0].anything.(ast.TableStructDef)}
    }
	case 467: {
        yyVAL.anything = append(yyS[yypt-2].anything.([]ast.TableStructDef), yyS[yypt-0].anything.(ast.TableStructDef))
    }
	case 468: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 469: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 470: {
        yyVAL.node = &ast.CreateIndexStmt{}
    }
	case 471: {
        // empty
    }
	case 507: {
        // empty
    }
	case 512: {
        // empty
    }
	case 517: {
        // empty
    }
	case 520: {
        // empty
    }
	case 523: {
        yyVAL.node = &ast.DropTableStmt{
            TableName:  yyS[yypt-2].anything.(*ast.TableName),
        }
    }
	case 524: {
        // empty
    }
	case 526: {
        // empty
    }
	case 528: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 529: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 530: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 531: {
        yyVAL.anything = &element.NumberOrAsterisk{Number: yyS[yypt-0].i}
    }
	case 532: {
        yyVAL.anything = &element.NumberOrAsterisk{IsAsterisk: true}
    }
	case 533: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 534: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 535: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 536: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 537: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 538: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 539: {
        d := &element.Char{}
        d.SetDataDef(element.DataDefChar)
        yyVAL.anything = d
    }
	case 540: {
        size := yyS[yypt-1].i
        d := &element.Char{Size: &size}
        d.SetDataDef(element.DataDefChar)
        yyVAL.anything = d
    }
	case 541: {
        size := yyS[yypt-2].i
        d := &element.Char{Size: &size, IsByteSize: true}
        d.SetDataDef(element.DataDefChar)
        yyVAL.anything = d
    }
	case 542: {
        size := yyS[yypt-2].i
        d := &element.Char{Size: &size, IsCharSize: true}
        d.SetDataDef(element.DataDefChar)
        d.SetDataDef(element.DataDefChar)
        yyVAL.anything = d
    }
	case 543: {
        size := yyS[yypt-1].i
        d := &element.Varchar2{}
        d.Size = &size
        d.SetDataDef(element.DataDefVarchar2)
        yyVAL.anything = d
    }
	case 544: {
        size := yyS[yypt-2].i
        d := &element.Varchar2{}
        d.Size = &size
        d.IsByteSize = true
        d.SetDataDef(element.DataDefVarchar2)
        yyVAL.anything = d
    }
	case 545: {
        size := yyS[yypt-2].i
        d := &element.Varchar2{}
        d.Size = &size
        d.IsCharSize = true
        d.SetDataDef(element.DataDefVarchar2)
        yyVAL.anything = d
    }
	case 546: {
        d := &element.NChar{}
        d.SetDataDef(element.DataDefNChar)
        yyVAL.anything = d
    }
	case 547: {
        size := yyS[yypt-1].i
        d := &element.NChar{Size: &size}
        d.SetDataDef(element.DataDefNChar)
        yyVAL.anything = d
    }
	case 548: {
        size := yyS[yypt-1].i
        d := &element.NVarchar2{}
        d.Size = &size
        d.SetDataDef(element.DataDefNVarChar2)
        yyVAL.anything = d
    }
	case 549: {
        d := &element.Number{}
        d.SetDataDef(element.DataDefNumber)
        yyVAL.anything = d
    }
	case 550: {
        precision := yyS[yypt-1].anything.(*element.NumberOrAsterisk)
        d := &element.Number{Precision: precision}
        d.SetDataDef(element.DataDefNumber)
        yyVAL.anything = d
    }
	case 551: {
        precision := yyS[yypt-3].anything.(*element.NumberOrAsterisk)
        scale := yyS[yypt-1].i
        d := &element.Number{Precision: precision, Scale: &scale}
        d.SetDataDef(element.DataDefNumber)
        yyVAL.anything = d
    }
	case 552: {
        d := &element.Float{}
        d.SetDataDef(element.DataDefFloat)
        yyVAL.anything = d
    }
	case 553: {
        precision := yyS[yypt-1].anything.(*element.NumberOrAsterisk)
        d := &element.Float{Precision: precision}
        d.SetDataDef(element.DataDefFloat)
        yyVAL.anything = d
    }
	case 554: {
        d := &element.BinaryFloat{}
        d.SetDataDef(element.DataDefBinaryFloat)
        yyVAL.anything = d
    }
	case 555: {
        d := &element.BinaryDouble{}
        d.SetDataDef(element.DataDefBinaryDouble)
        yyVAL.anything = d
    }
	case 556: {
        d := &element.Long{}
        d.SetDataDef(element.DataDefLong)
        yyVAL.anything = d
    }
	case 557: {
        d := &element.LongRaw{}
        d.SetDataDef(element.DataDefLongRaw)
        yyVAL.anything = d
    }
	case 558: {
        size := yyS[yypt-1].i
        d := &element.Raw{Size: &size}
        d.SetDataDef(element.DataDefRaw)
        yyVAL.anything = d
    }
	case 559: {
        d := &element.Date{}
        d.SetDataDef(element.DataDefDate)
        yyVAL.anything = d
    }
	case 560: {
        d := &element.Timestamp{}
        d.SetDataDef(element.DataDefTimestamp)
        yyVAL.anything = d
    }
	case 561: {
        precision := yyS[yypt-1].i
        d := &element.Timestamp{FractionalSecondsPrecision: &precision}
        d.SetDataDef(element.DataDefTimestamp)
        yyVAL.anything = d
    }
	case 562: {
        precision := yyS[yypt-4].i
        d := &element.Timestamp{FractionalSecondsPrecision: &precision, WithTimeZone: true}
        d.SetDataDef(element.DataDefTimestamp)
        yyVAL.anything = d
    }
	case 563: {
        precision := yyS[yypt-5].i
        d := &element.Timestamp{FractionalSecondsPrecision: &precision, WithLocalTimeZone: true}
        d.SetDataDef(element.DataDefTimestamp)
        yyVAL.anything = d
    }
	case 564: {
        d := &element.IntervalYear{}
        d.SetDataDef(element.DataDefIntervalYear)
        yyVAL.anything = d
    }
	case 565: {
        precision := yyS[yypt-3].i
        d := &element.IntervalYear{Precision: &precision}
        d.SetDataDef(element.DataDefIntervalYear)
        yyVAL.anything = d
    }
	case 566: {
        d := &element.IntervalDay{}
        d.SetDataDef(element.DataDefIntervalDay)
        yyVAL.anything = d
    }
	case 567: {
        precision := yyS[yypt-3].i
        d := &element.IntervalDay{Precision: &precision}
        d.SetDataDef(element.DataDefIntervalDay)
        yyVAL.anything = d
    }
	case 568: {
        precision := yyS[yypt-6].i
        sPrecision := yyS[yypt-1].i
        d := &element.IntervalDay{Precision: &precision, FractionalSecondsPrecision: &sPrecision}
        d.SetDataDef(element.DataDefIntervalDay)
        yyVAL.anything = d
    }
	case 569: {
        sPrecision := yyS[yypt-1].i
        d := &element.IntervalDay{FractionalSecondsPrecision: &sPrecision}
        d.SetDataDef(element.DataDefIntervalDay)
        yyVAL.anything = d
    }
	case 570: {
        d := &element.Blob{}
        d.SetDataDef(element.DataDefBlob)
        yyVAL.anything = d
    }
	case 571: {
        d := &element.Clob{}
        d.SetDataDef(element.DataDefClob)
        yyVAL.anything = d
    }
	case 572: {
        d := &element.NClob{}
        d.SetDataDef(element.DataDefNClob)
        yyVAL.anything = d
    }
	case 573: {
        d := &element.BFile{}
        d.SetDataDef(element.DataDefBFile)
        yyVAL.anything = d
    }
	case 574: {
        d := &element.RowId{}
        d.SetDataDef(element.DataDefRowId)
        yyVAL.anything = d
    }
	case 575: {
        d := &element.URowId{}
        d.SetDataDef(element.DataDefURowId)
        yyVAL.anything = d
    }
	case 576: {
        size := yyS[yypt-1].i
        d := &element.URowId{Size: &size}
        d.SetDataDef(element.DataDefURowId)
        yyVAL.anything = d
    }
	case 577: {
        size := yyS[yypt-1].i
        d := &element.Char{}
        d.Size = &size
        d.SetDataDef(element.DataDefCharacter)
        yyVAL.anything = d
    }
	case 578: {
        size := yyS[yypt-1].i
        d := &element.Varchar2{}
        d.Size = &size
        d.SetDataDef(element.DataDefCharacterVarying)
        yyVAL.anything = d
    }
	case 579: {
        size := yyS[yypt-1].i
        d := &element.Varchar2{}
        d.Size = &size
        d.SetDataDef(element.DataDefCharVarying)
        yyVAL.anything = d
    }
	case 580: {
        size := yyS[yypt-1].i
        d := &element.NVarchar2{}
        d.Size = &size
        d.SetDataDef(element.DataDefNCharVarying)
        yyVAL.anything = d
    }
	case 581: {
        size := yyS[yypt-1].i
        d := &element.Varchar2{}
        d.Size = &size
        d.SetDataDef(element.DataDefVarchar)
        yyVAL.anything = d
    }
	case 582: {
        size := yyS[yypt-1].i
        d := &element.NChar{Size: &size}
        d.SetDataDef(element.DataDefNationalCharacter)
        yyVAL.anything = d
    }
	case 583: {
        size := yyS[yypt-1].i
        d := &element.NVarchar2{}
        d.Size = &size
        d.SetDataDef(element.DataDefNationalCharacterVarying)
        yyVAL.anything = d
    }
	case 584: {
        size := yyS[yypt-1].i
        d := &element.NChar{Size: &size}
        d.SetDataDef(element.DataDefNationalChar)
        yyVAL.anything = d
    }
	case 585: {
        size := yyS[yypt-1].i
        d := &element.NVarchar2{}
        d.Size = &size
        d.SetDataDef(element.DataDefNationalCharVarying)
        yyVAL.anything = d
    }
	case 586: {
        d := &element.Number{}
        d.SetDataDef(element.DataDefNumeric)
        yyVAL.anything = d
    }
	case 587: {
        precision := yyS[yypt-1].anything.(*element.NumberOrAsterisk)
        d := &element.Number{Precision: precision}
        d.SetDataDef(element.DataDefNumeric)
        yyVAL.anything = d
    }
	case 588: {
        precision := yyS[yypt-3].anything.(*element.NumberOrAsterisk)
        scale := yyS[yypt-1].i
        d := &element.Number{Precision: precision, Scale: &scale}
        d.SetDataDef(element.DataDefNumeric)
        yyVAL.anything = d
    }
	case 589: {
        d := &element.Number{}
        d.SetDataDef(element.DataDefDecimal)
        yyVAL.anything = d
    }
	case 590: {
        precision := yyS[yypt-1].anything.(*element.NumberOrAsterisk)
        d := &element.Number{Precision: precision}
        d.SetDataDef(element.DataDefDecimal)
        yyVAL.anything = d
    }
	case 591: {
        precision := yyS[yypt-3].anything.(*element.NumberOrAsterisk)
        scale := yyS[yypt-1].i
        d := &element.Number{Precision: precision, Scale: &scale}
        d.SetDataDef(element.DataDefDecimal)
        yyVAL.anything = d
    }
	case 592: {
        d := &element.Number{}
        d.SetDataDef(element.DataDefDec)
        yyVAL.anything = d
    }
	case 593: {
        precision := yyS[yypt-1].anything.(*element.NumberOrAsterisk)
        d := &element.Number{Precision: precision}
        d.SetDataDef(element.DataDefDec)
        yyVAL.anything = d
    }
	case 594: {
        precision := yyS[yypt-3].anything.(*element.NumberOrAsterisk)
        scale := yyS[yypt-1].i
        d := &element.Number{Precision: precision, Scale: &scale}
        d.SetDataDef(element.DataDefDec)
        yyVAL.anything = d
    }
	case 595: {
        precision := &element.NumberOrAsterisk{Number: 38}
        d := &element.Number{Precision: precision}
        d.SetDataDef(element.DataDefInteger)
        yyVAL.anything = d
    }
	case 596: {
        precision := &element.NumberOrAsterisk{Number: 38}
        d := &element.Number{Precision: precision}
        d.SetDataDef(element.DataDefInt)
        yyVAL.anything = d
    }
	case 597: {
        precision := &element.NumberOrAsterisk{Number: 38}
        d := &element.Number{Precision: precision}
        d.SetDataDef(element.DataDefSmallInt)
        yyVAL.anything = d
    }
	case 598: {
        precision := &element.NumberOrAsterisk{Number: 126}
        d := &element.Float{Precision: precision}
        d.SetDataDef(element.DataDefDoublePrecision)
        yyVAL.anything = d
    }
	case 599: {
        precision := &element.NumberOrAsterisk{Number: 63}
        d := &element.Float{Precision: precision}
        d.SetDataDef(element.DataDefReal)
        yyVAL.anything = d
    }
	case 600: {
        d := &element.XMLType{}
        d.SetDataDef(element.DataDefXMLType)
        yyVAL.anything = d
    }
	case 601: {
        yyVAL.anything = yyS[yypt-0].anything
    }
	case 602: {
        constraint := yyS[yypt-0].anything.(*ast.InlineConstraint)
        constraint.Name = yyS[yypt-1].anything.(*element.Identifier)
	    yyVAL.anything = constraint
    }
	case 603: {
	    yyVAL.anything = yyS[yypt-0].anything
    }
	case 604: {
	    yyVAL.anything = &ast.InlineConstraint{
	        Type: ast.ConstraintType(yyS[yypt-1].i),
	    }
    }
	case 605: {
	    yyVAL.anything = &ast.InlineConstraint{
	        Type: ast.ConstraintTypeReferences,
	    }
    }
	case 606: {
        yyVAL.i = int(ast.ConstraintTypeNull)
    }
	case 607: {
        yyVAL.i = int(ast.ConstraintTypeNotNull)
    }
	case 608: {
        yyVAL.i = int(ast.ConstraintTypeUnique)
    }
	case 609: {
        yyVAL.i = int(ast.ConstraintTypePK)
    }
	case 611: {
        // empty
    }
	case 613: {
        // empty
    }
	case 616: {
        // empty
    }
	case 619: {
        // empty
    }
	case 628: {
        // empty
    }
	case 631: {
        // empty
    }
	case 635: {
        // empty
    }
	case 638: {
        // empty
    }
	case 641: {
        // empty
    }
	case 647: {
        constraint := yyS[yypt-0].anything.(*ast.OutOfLineConstraint)
        constraint.Name = yyS[yypt-1].anything.(*element.Identifier)
	    yyVAL.anything = constraint
    }
	case 648: {
	    yyVAL.anything = yyS[yypt-0].anything
    }
	case 649: {
        constraint := &ast.OutOfLineConstraint{}
	    constraint.Type = ast.ConstraintTypeUnique
	    constraint.Columns = yyS[yypt-2].anything.([]*element.Identifier)
	    yyVAL.anything = constraint
    }
	case 650: {
        constraint := &ast.OutOfLineConstraint{}
	    constraint.Type = ast.ConstraintTypePK
	    constraint.Columns = yyS[yypt-2].anything.([]*element.Identifier)
	    yyVAL.anything = constraint
    }
	case 651: {
        constraint := &ast.OutOfLineConstraint{}
	    constraint.Type = ast.ConstraintTypeReferences
	    constraint.Columns = yyS[yypt-3].anything.([]*element.Identifier)
	    yyVAL.anything = constraint
    }
	case 679: {
        // empty
    }
	case 692: {
        // empty
    }
	case 694: {
        // empty
    }

	}

	if yyEx != nil && yyEx.Reduced(r, exState, &yyVAL) {
		return -1
	}
	goto yystack /* stack new state and value */
}
